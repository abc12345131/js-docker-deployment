{"version":3,"sources":["redux/action-types.js","redux/reducer.js","redux/store.js","utils/constants.js","utils/cookieUtils.js","api/ajax.js","api/index.js","assets/images/logo.jpg","assets/images/background1.jpg","assets/videos/waterfall-in-forest.mp4","pages/login/index.jsx","assets/images/background2.jpg","assets/videos/stars-in-space.mp4","pages/register/index.jsx","config/menuConfig.js","redux/actions.js","components/left-nav/index.jsx","utils/timeUtils.js","components/header/index.jsx","pages/home/platform-chart.jsx","pages/home/view-chart.jsx","pages/home/engagement-chart.jsx","pages/home/index.jsx","pages/category/add-form.jsx","pages/category/update-form.jsx","pages/category/index.jsx","pages/product/pictures-wall.jsx","pages/product/rich-text-editor.jsx","pages/product/add-update.jsx","pages/product/detail.jsx","pages/product/home.jsx","pages/product/index.jsx","pages/role/add-form.jsx","pages/role/update-form.jsx","pages/role/index.jsx","pages/user/user-form.jsx","pages/user/index.jsx","pages/charts/engagement.jsx","pages/charts/acquisition.jsx","pages/charts/demographics.jsx","pages/not-found/index.jsx","pages/admin/index.jsx","App.js","index.js"],"names":["SET_HEAD_TITLE","initialState","createStore","state","action","type","data","composeWithDevTools","applyMiddleware","thunk","Base_IMG_URL","USER_KEY","cookies","Cookies","cookieUtils","getUser","get","removeUser","remove","ajax","url","Promise","resolve","reject","promise","axios","params","post","put","delete","console","log","then","response","catch","error","message","reqWeather","city","reqCategories","parentId","Base","reqAddCategory","categoryName","reqUpdateCategory","categoryId","reqIdentifyCategory","reqProducts","pageNum","pageSize","reqSearchProducts","searchType","keywords","reqUpdateStatus","productId","status","reqAddOrUpdateProduct","product","_id","reqDeleteImg","name","reqAddRole","roleName","reqUpdateRole","role","reqLogin","username","password","reqAddOrUpdateUser","user","reqWork","userId","Item","Login","errorMsg","onFinish","values","a","result","success","props","history","replace","setState","msg","onFinishFailed","errorInfo","to","this","className","autoPlay","loop","muted","poster","backgroundimage","src","backgroundvideo","logo","alt","initialValues","remember","rules","required","prefix","UserOutlined","placeholder","LockOutlined","valuePropName","noStyle","htmlType","href","Component","Option","Register","prefixSelector","style","width","value","labelCol","xs","span","sm","wrapperCol","scrollToFirstError","label","min","max","pattern","hasFeedback","Password","dependencies","getFieldValue","validator","_","Error","addonBefore","offset","menuList","title","key","icon","HomeOutlined","fontSize","isPublic","AppstoreOutlined","children","BarsOutlined","BarcodeOutlined","SafetyOutlined","AreaChartOutlined","LineChartOutlined","PieChartOutlined","BarChartOutlined","setHeadTitle","headTitle","SubMenu","LeftNav","getMenuNodes","path","location","pathname","map","item","hasAuth","find","c","indexOf","openkey","height","onClick","menus","includes","child","menuNodes","selectedKeys","defaultOpenKeys","mode","theme","connect","withRouter","formatTime","time","date","Date","hour","getHours","minute","getMinutes","second","getSeconds","getFullYear","getMonth","getDate","Header","currentTime","now","text","getTime","intervalId","setInterval","getWeather","region","country","current","temp_c","humidity","condition","logout","confirm","ExclamationCircleOutlined","onOk","clearInterval","shape","PlatformChart","float","autoFit","month","platform","visit","scale","alias","interactions","padding","position","color","textAlign","fill","shared","showCrosshairs","PureComponent","ViewChart","year","views","EngagementChart","engagements","dateFormat","RangePicker","Home","work","isVisited","update","initTask","taskNodes","getTaskNodes","tasks","task","handleChange","headStyle","QuestionCircleOutlined","fontWeight","valueStyle","suffix","ArrowUpOutlined","marginLeft","ArrowDownOutlined","extra","defaultValue","moment","format","bodyStyle","ReloadOutlined","AddForm","formRef","React","createRef","setFormRef","categories","classification","ref","UpdateForm","category","Category","loading","subCategories","parentName","showStatus","initColumns","columns","dataIndex","render","showUpdate","showSubCategories","getCategories","showCategories","handleCancel","showAdd","addCategory","validateFields","updateCategory","ArrowRightOutlined","marginRight","PlusOutlined","bordered","rowKey","dataSource","pagination","defaultPageSize","showQuickJumper","visible","onCancel","getContainer","getBase64","file","reader","FileReader","readAsDataURL","onload","onerror","PicturesWall","previewVisible","previewImage","previewTitle","fileList","handlePreview","preview","originFileObj","substring","lastIndexOf","newFile","length","getImgs","imgs","img","index","uid","uploadButton","marginTop","accept","listType","onPreview","onChange","footer","RichTextEditor","editorState","EditorState","createEmpty","textarea","onEditorStateChange","draftToHtml","convertToRaw","getCurrentContent","getDetail","uploadImageCallBack","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","JSON","parse","responseText","link","html","detail","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","editorStyle","border","toolbar","image","uploadCallback","present","mandatory","disabled","TextArea","ProductAddUpdate","options","pw","pwRef","rte","rteRef","productName","productDescription","productPrice","productCategory","pCategoryId","desc","price","isUpdate","goBack","initOptions","isLeaf","childOptions","targetOption","option","loadData","selectedOptions","categoryIds","push","ArrowLeftOutlined","autoSize","minRows","maxRows","ProductDetail","all","results","dangerouslySetInnerHTML","__html","ProductHome","products","total","Status","newStatus","updateStatus","getProducts","list","margin","event","target","Product","exact","component","checkedKeys","onCheck","info","getMenus","treeData","checkable","defaultExpandAll","Role","roles","getRoles","onRow","addRole","updateRole","uf","ufRef","auth_name","auth_time","role_id","rowSelection","selectedRowKeys","onSelect","UserForm","phone","email","User","users","roleNames","showAddOrUpdate","deleteUser","initRoleNames","reduce","pre","addOrUpdateUser","getUsers","DeleteOutlined","Engagement","accounts","page_view","scroll","user_engagement","session_start","first_visit","getOption","tooltip","legend","xAxis","yAxis","series","Acquisition","dateList","direct","referral","visualMap","show","seriesIndex","trigger","grid","Demographics","backgroundColor","top","textStyle","toolbox","feature","mark","dataView","readOnly","restore","saveAsImage","radius","center","roseType","itemStyle","borderRadius","NotFound","goHome","size","Footer","Sider","Content","Admin","routeList","getRouteNodes","routeNodes","minHeight","from","App","basename","ReactDOM","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.1f3e1142.chunk.js","sourcesContent":["export const SET_HEAD_TITLE = 'set_head_title'\r\nexport const RECEIVE_USER = 'receive_user'\r\nexport const SHOW_ERROR_MSG = 'show_error_msg'\r\nexport const RESET_USER = 'reset_user'","//import {combineReducers} from 'redux'\r\n//import storageUtils from '../utils/storageUtils'\r\nimport { \r\n    SET_HEAD_TITLE, \r\n    //RECEIVE_USER, \r\n    //SHOW_ERROR_MSG, \r\n    //RESET_USER \r\n} from './action-types'\r\n\r\nconst initialState = {\r\n    headTitle: '',\r\n    //user: storageUtils.getUser()\r\n}\r\n\r\nexport default function headTitle (state = initialState.headTitle, action) {\r\n    switch (action.type) {\r\n        case SET_HEAD_TITLE:\r\n            return action.data\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// function user (state = initialState.user, action) {\r\n//     switch (action.type) {\r\n//         case RECEIVE_USER:\r\n//             return action.data\r\n//         case SHOW_ERROR_MSG:\r\n//             const errorMsg = action.data\r\n//             //do not modify origin state!\r\n//             return {...state, errorMsg}\r\n//         case RESET_USER:\r\n//             return {}\r\n//         default:\r\n//             return state\r\n//     }\r\n// }\r\n\r\n\r\n/*\r\n    exported state structure\r\n    {\r\n        headTitle: 'Home'\r\n        user: {}\r\n    }\r\n*/\r\n// export default combineReducers({\r\n//     headTitle,\r\n//     user\r\n// })","import { createStore, applyMiddleware } from 'redux'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport reducer from './reducer'\r\n\r\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(thunk)))","export const PAGE_SIZE = 5\r\nexport const Base_IMG_URL = '/upload/'\r\nexport const USER_KEY = 'user_key'","import { USER_KEY } from './constants'\r\nimport Cookies from 'universal-cookie'\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst cookieUtils = {\r\n    // get user cookie\r\n    getUser () {\r\n        return cookies.get(USER_KEY) || {}\r\n    },\r\n  \r\n    // save user cookie\r\n    // saveUser(user) {\r\n    //     //setting cookie，'/' means any path could use this cookie\r\n    //     cookies.set(USER_KEY, user, { path: '/' })\r\n    // },\r\n  \r\n    // remove user cookie\r\n    removeUser() {\r\n        cookies.remove(USER_KEY)\r\n    }\r\n}\r\n\r\nexport default cookieUtils","import axios from 'axios'\r\nimport { message } from 'antd'\r\n\r\n\r\n//axios.defaults.withCredentials = true\r\n\r\nexport default function ajax (url, data={}, type='GET' ){\r\n    //collecting error within the function instead of rejecting the error\r\n    return new Promise((resolve, reject) => {\r\n        let promise = null\r\n\r\n        switch (type) {\r\n            case 'GET':\r\n                promise = axios.get(url,{params: data})\r\n                break\r\n            case 'POST': \r\n                promise = axios.post(url,data)\r\n                break\r\n            case 'PUT': \r\n                promise = axios.put(url,data)\r\n                break\r\n            case 'DELETE': \r\n                promise = axios.delete(url,{params: data})\r\n                break\r\n            default:\r\n                console.log('Request type is wrong!' )\r\n        }\r\n\r\n        promise.then(response => {\r\n            //directly return response.data for request\r\n            resolve(response.data)\r\n        }).catch(error => {\r\n            //use antd message collect error\r\n            message.error(error.message)\r\n        })\r\n    })\r\n}","import ajax from './ajax';\r\n\r\nconst Base = '/api'\r\n\r\n//weather api\r\nexport const reqWeather = (city) => {\r\n    const apiUrl= `http://api.weatherapi.com/v1/current.json?key=78792b6e7fe541328bd34938210505&q=${city}&aqi=no`\r\n    return ajax(apiUrl)}\r\n\r\n//get categories\r\nexport const reqCategories = (parentId) => ajax(Base + '/categories', {parentId})\r\n//add category\r\nexport const reqAddCategory = (categoryName, parentId) => ajax(Base + '/categories', {categoryName, parentId}, 'POST')\r\n//update category\r\nexport const reqUpdateCategory = (categoryId, categoryName) => ajax(Base + '/categories', {categoryId, categoryName}, 'PUT')\r\n//identify category\r\nexport const reqIdentifyCategory = (categoryId) => ajax(Base + '/categories/'+categoryId)\r\n\r\n//get products(by page)\r\nexport const reqProducts = (pageNum, pageSize) => ajax(Base + '/products', {pageNum, pageSize})\r\n//search products by name/description\r\nexport const reqSearchProducts = (pageNum, pageSize, searchType, keywords ) => ajax(Base + '/products/search', {pageNum, pageSize, [searchType]:keywords})\r\n//update product status (available/unavailable)\r\nexport const reqUpdateStatus = (productId, status) => ajax(Base + '/products/status', {productId, status}, 'PUT')\r\n//add product or update product\r\nexport const reqAddOrUpdateProduct = (product) => ajax(Base + '/products', product, (product._id ? 'PUT': 'POST'))\r\n\r\n//delete image\r\nexport const reqDeleteImg = (name) => ajax(Base + '/imgs', {name}, 'DELETE')\r\n\r\n//get roles\r\nexport const reqRoles = () => ajax(Base + '/roles')\r\n//add role\r\nexport const reqAddRole = (roleName) => ajax(Base + '/roles', {roleName}, 'POST')\r\n//update role\r\nexport const reqUpdateRole = (role) => ajax(Base + '/roles', role, 'PUT')\r\n\r\n//user login\r\nexport const reqLogin = (username, password) => ajax(Base + '/users/'+username, {password}, 'POST')\r\n//get Users\r\nexport const reqUsers = () => ajax(Base + '/users')\r\n//delete User\r\nexport const reqDeleteUser = (userId) => ajax(Base + '/users', {userId}, 'DELETE')\r\n//add or update User\r\nexport const reqAddOrUpdateUser = (user) => ajax(Base + '/users', user, (user._id ? 'PUT': 'POST'))\r\n\r\n//get current user's work\r\nexport const reqWork = (userId) => ajax(Base + '/work/'+userId)","export default __webpack_public_path__ + \"static/media/logo.da561af0.jpg\";","export default __webpack_public_path__ + \"static/media/background1.107a276c.jpg\";","export default __webpack_public_path__ + \"static/media/waterfall-in-forest.aadad41d.mp4\";","import React, { Component } from 'react'\r\n// use redux\r\n// import { connect } from 'react-redux'\r\n//import { login } from '../../redux/actions'\r\nimport cookieUtils from '../../utils/cookieUtils'\r\nimport { reqLogin } from \"../../api\"\r\nimport { Redirect } from 'react-router'\r\nimport { Form, Input, Button, Checkbox, message } from 'antd'\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons'\r\nimport './index.less'\r\nimport logo from '../../assets/images/logo.jpg'\r\nimport backgroundimage from '../../assets/images/background1.jpg' \r\nimport backgroundvideo from '../../assets/videos/waterfall-in-forest.mp4'\r\n// use localstorage\r\n// import memoryUtils from '../../utils/memoryUtils'\r\n// import storageUtils from '../../utils/storageUtils'\r\n\r\n\r\nconst Item = Form.Item\r\n\r\nexport default class Login extends Component {\r\n\r\n    state = {\r\n        errorMsg: ''\r\n    }\r\n\r\n    onFinish = async (values) => {\r\n        const { username, password } = values\r\n        \r\n        const result = await reqLogin(username, password)\r\n        if (result.status === 0) {\r\n            message.success('Log in succeed!')\r\n            //use localstorage   \r\n            //save user in memory \r\n            //memoryUtils.user = user\r\n            //save user in localstorage\r\n            //storageUtils.saveUser(user)\r\n            //redirect to home\r\n            this.props.history.replace('/home')\r\n        } else {\r\n            this.setState({errorMsg: result.msg})\r\n        }\r\n\r\n        // use redux\r\n        //this.props.login(username, password)\r\n    }\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        message.error('Log in failed!')\r\n    }\r\n\r\n    render() {\r\n\r\n        //if user already log in, redirect to admin\r\n        // use localstorage\r\n        // const user = memoryUtils.user\r\n\r\n        // use redux\r\n        //const user = this.props.user\r\n\r\n        const user = cookieUtils.getUser()\r\n        if(user && user._id) {\r\n            return <Redirect to='/home' />\r\n        }\r\n        \r\n        const {errorMsg} = this.state\r\n\r\n        return (\r\n            <div className=\"login\">\r\n                <video autoPlay loop muted poster={backgroundimage} className=\"bgvid\">\r\n                    <source src={backgroundvideo} type=\"video/mp4\"/>\r\n                </video>\r\n                <header className=\"login-header\">\r\n                    <img src={logo} alt=\"logo\"/>\r\n                    <h1>React Administration System</h1>\r\n                </header>\r\n                <section className=\"login-content\">\r\n                    <div className={errorMsg ? \"error-msg show\": \"error-msg\"}>{errorMsg}</div>\r\n                    <h2>User Login</h2>\r\n                    <Form\r\n                        name=\"normal_login\"\r\n                        className=\"login-form\"\r\n                        initialValues={{\r\n                            username: 'admin',\r\n                            password: 'admin',\r\n                            remember: true,\r\n                        }}\r\n                        onFinish={this.onFinish}\r\n                        onFinishFailed={this.onFinishFailed}\r\n                    >\r\n                        <Item\r\n                            name=\"username\"\r\n                            rules={[\r\n                                {required: true, message: 'Username is required' }\r\n                            ]}\r\n                        >\r\n                            <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n                        </Item>\r\n                        <Item\r\n                            name=\"password\"\r\n                            rules={[\r\n                                {required: true, message: 'Password is required' },                               \r\n                            ]}\r\n                        >\r\n                            <Input prefix={<LockOutlined className=\"site-form-item-icon\" />} type=\"password\" placeholder=\"Password\" />\r\n                        </Item>\r\n                        <Item>\r\n                            <Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                                <Checkbox>Remember me</Checkbox>\r\n                            </Item>\r\n                        </Item>\r\n                        <Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">Log in</Button>\r\n                            Or <a href=\"/register\">register now!</a>\r\n                        </Item>\r\n                    </Form>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n// use redux\r\n// export default connect(\r\n//     state => ({user: state.user}),\r\n//     {login}\r\n// ) (Login)","export default __webpack_public_path__ + \"static/media/background2.938a0d6a.jpg\";","export default __webpack_public_path__ + \"static/media/stars-in-space.0b394100.mp4\";","import React, { Component } from 'react'\r\nimport { Form, Select, Input, Button, message } from 'antd'\r\nimport './index.less'\r\nimport logo from '../../assets/images/logo.jpg'\r\nimport backgroundimage from '../../assets/images/background2.jpg' \r\nimport backgroundvideo from '../../assets/videos/stars-in-space.mp4'\r\nimport { reqAddOrUpdateUser } from \"../../api\";\r\n\r\nconst {Item} = Form\r\nconst {Option} = Select\r\n\r\nexport default class Register extends Component {\r\n\r\n    state = {\r\n        errorMsg: ''\r\n    }\r\n\r\n    onFinish = async (values) => {\r\n        const result = await reqAddOrUpdateUser(values)\r\n        if (result.status === 0) {\r\n            message.success('Register succeed')\r\n            this.props.history.replace('/login')\r\n        } else {\r\n            this.setState({errorMsg: result.msg})\r\n        }\r\n    }\r\n    \r\n    onFinishFailed = (errorInfo) => {\r\n        message.error('Register failed!')\r\n    }\r\n\r\n    render() {\r\n    \r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: {\r\n                    span: 24,\r\n                },\r\n                sm: {\r\n                    span: 8,\r\n                },\r\n            },\r\n            wrapperCol: {\r\n                xs: {\r\n                    span: 24,\r\n                },\r\n                sm: {\r\n                    span: 16,\r\n                }\r\n            }\r\n        }\r\n\r\n        const tailFormItemLayout = {\r\n            wrapperCol: {\r\n                xs: {\r\n                    span: 24,\r\n                    offset: 0,\r\n                },\r\n                sm: {\r\n                    span: 16,\r\n                    offset: 8,\r\n                }\r\n            }\r\n        }\r\n\r\n        const prefixSelector = (\r\n            <Item name=\"prefix\" noStyle>\r\n              <Select\r\n                style={{\r\n                  width: 70,\r\n                }}\r\n              >\r\n                <Option value=\"1\">+1</Option>\r\n              </Select>\r\n            </Item>\r\n        )\r\n\r\n        const {errorMsg} = this.state\r\n\r\n        return (\r\n            <div className=\"register\">\r\n                <video autoPlay loop muted poster={backgroundimage} className=\"bgvid\">\r\n                    <source src={backgroundvideo} type=\"video/mp4\"/>\r\n                </video>\r\n                <header className=\"register-header\">\r\n                    <img src={logo} alt=\"logo\"/>\r\n                    <h1>React Administration System</h1>\r\n                </header>\r\n                <section className=\"register-content\">\r\n                    <div className={errorMsg ? \"error-msg show\": \"error-msg\"}>{errorMsg}</div>\r\n                    <h2>User Register</h2>\r\n                    <Form\r\n                        initialValues={{prefix:'1'}}\r\n                        {...formItemLayout}\r\n                        name=\"register\"\r\n                        onFinish={this.onFinish}\r\n                        onFinishFailed={this.onFinishFailed}\r\n                        scrollToFirstError\r\n                    >\r\n                        <Item\r\n                            name=\"username\"\r\n                            label=\"Username\"\r\n                            rules={[\r\n                                {required: true, message: 'Username is required' },\r\n                                {min: 6, message: 'Username has to be no less than 6 digits' },\r\n                                {max: 12, message: 'Username has to be no more than 12 digits' },\r\n                                {pattern: /^[\\w]+$/, message: 'Username should include only the following character types: uppercase, lowercase, numbers, and _ symbol.' },\r\n                            ]}\r\n                        >\r\n                            <Input />\r\n                        </Item>\r\n                        <Item\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            rules={[\r\n                                {required: true, message: 'Password is required' },\r\n                                {pattern: /^(?![\\d]+$)(?![a-zA-Z]+$)(?![^\\da-zA-Z]+$).{8,16}$/, message: 'Password should include 8 to 16 digits, at least two of the following character types: letters, numbers and special characters.' },\r\n                            ]}\r\n                            hasFeedback\r\n                        >\r\n                            <Input.Password />\r\n                        </Item>\r\n                        <Item\r\n                            name=\"confirm\"\r\n                            label=\"Confirm Password\"\r\n                            dependencies={['password']}\r\n                            hasFeedback\r\n                            rules={[\r\n                                {\r\n                                    required: true,\r\n                                    message: 'Please confirm your password!',\r\n                                },\r\n                                ({ getFieldValue }) => ({\r\n                                    validator(_, value) {\r\n                                    if (!value || getFieldValue('password') === value) {\r\n                                        return Promise.resolve();\r\n                                    }\r\n\r\n                                    return Promise.reject(new Error('Passwords do not match!'));\r\n                                    },\r\n                                }),\r\n                            ]}\r\n                        >\r\n                            <Input.Password />\r\n                        </Item>\r\n                        <Item \r\n                            name='phone'\r\n                            label='Phone Number'\r\n                            rules={[\r\n                                {required: true, message: 'Phone Number is required'},\r\n                                {pattern: /^[0-9]{10}$/, message: 'Please enter your 10 digits phone number' }\r\n                            ]}\r\n                        >\r\n                            <Input\r\n                                type='number'\r\n                                placeholder='Please input phone number'\r\n                                addonBefore={prefixSelector}\r\n                                style={{width: '100%'}}\r\n                            />\r\n                        </Item>\r\n                        <Item \r\n                            name='email'\r\n                            label='Email'\r\n                            rules={[\r\n                                {type: 'email', message: 'The input is not valid E-mail!'},\r\n                                {required: true, message: 'Please input your E-mail!'}\r\n                            ]}\r\n                        >\r\n                            <Input placeholder='Please input email address'/>\r\n                        </Item>\r\n                        <Item {...tailFormItemLayout}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">Register</Button>\r\n                            Or <a href=\"/login\">Log in</a>\r\n                        </Item>\r\n                    </Form>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}","import {\r\n    HomeOutlined,\r\n    AppstoreOutlined,\r\n    BarsOutlined,\r\n    BarcodeOutlined,\r\n    UserOutlined,\r\n    SafetyOutlined,\r\n    AreaChartOutlined,\r\n    BarChartOutlined,\r\n    LineChartOutlined,\r\n    PieChartOutlined\r\n} from '@ant-design/icons'\r\n  \r\nconst menuList = [\r\n    {\r\n        title: 'Home', \r\n        key: '/home', \r\n        icon: <HomeOutlined style={{fontSize: 20}}/>, \r\n        isPublic: true, \r\n    },\r\n    {\r\n        title: 'Commodity',\r\n        key: '/commodity',\r\n        icon: <AppstoreOutlined style={{fontSize: 20}}/>,\r\n        children: [\r\n            {\r\n                title: 'Category',\r\n                key: '/category',\r\n                icon: <BarsOutlined style={{fontSize: 20}}/>,\r\n            },\r\n            {\r\n                title: 'Product',\r\n                key: '/product',\r\n                icon: <BarcodeOutlined style={{fontSize: 20}}/>,\r\n            },\r\n        ]\r\n    },  \r\n    {\r\n        title: 'User',\r\n        key: '/user',\r\n        icon: <UserOutlined style={{fontSize: 20}}/>,\r\n    },\r\n    {\r\n        title: 'Role',\r\n        key: '/role',\r\n        icon: <SafetyOutlined style={{fontSize: 20}}/>,\r\n    },  \r\n    {\r\n        title: 'Charts',\r\n        key: '/charts',\r\n        icon: <AreaChartOutlined style={{fontSize: 20}}/>,\r\n        children: [\r\n            {\r\n                title: 'Acquisition',\r\n                key: '/charts/acquisition',\r\n                icon: <LineChartOutlined style={{fontSize: 20}}/>,\r\n            },\r\n            {\r\n                title: 'Demographics',\r\n                key: '/charts/demographics',\r\n                icon: <PieChartOutlined style={{fontSize: 20}}/>,\r\n            },\r\n            {\r\n                title: 'Engagement',\r\n                key: '/charts/engagement',\r\n                icon: <BarChartOutlined style={{fontSize: 20}}/>,\r\n            },\r\n        ]\r\n    }\r\n]\r\n  \r\nexport default menuList","import { \r\n    SET_HEAD_TITLE, \r\n    //RECEIVE_USER, \r\n    //SHOW_ERROR_MSG, \r\n    //RESET_USER \r\n} from './action-types'\r\n//import { reqLogin } from '../api'\r\n//import storageUtils from '../utils/storageUtils'\r\n\r\nexport const setHeadTitle = (headTitle) => ({\r\n    type: SET_HEAD_TITLE,\r\n    data: headTitle\r\n})\r\n\r\n// export const receiveUser = (user) => ({\r\n//     type: RECEIVE_USER,\r\n//     data: user\r\n// })\r\n\r\n// export const showErrorMsg = (errorMsg) => ({\r\n//     type: SHOW_ERROR_MSG,\r\n//     data: errorMsg\r\n// })\r\n\r\n// export const logout = () => {\r\n//     //storageUtils.removeUser()\r\n//     cookieUtils.removeUser()\r\n//     return {type: RESET_USER}\r\n// }\r\n\r\n// export const login = (username, password) => {\r\n//     return async dispatch => {\r\n//         const result = await reqLogin(username, password)\r\n//         if (result.status === 0) {\r\n//             const user = result.data\r\n//             //save user locally\r\n//             storageUtils.saveUser(user)\r\n//             dispatch(receiveUser(user))\r\n//         } else {\r\n//             const errorMsg = result.msg\r\n//             dispatch(showErrorMsg(errorMsg))\r\n//         }\r\n//     }\r\n// }","import React, { Component } from 'react'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Menu } from 'antd'\r\nimport menuList from '../../config/menuConfig'\r\nimport logo from '../../assets/images/logo.jpg'\r\n// use localstorage\r\n// import memoryUtils from '../../utils/memoryUtils'\r\nimport cookieUtils from '../../utils/cookieUtils'\r\nimport { setHeadTitle } from '../../redux/actions'\r\nimport './index.less'\r\n\r\n\r\nconst { SubMenu } = Menu\r\n\r\nclass LeftNav extends Component {\r\n    \r\n    getMenuNodes = (menuList) => {\r\n\r\n        const path = this.props.location.pathname\r\n\r\n        return menuList.map((item) => {\r\n            if (this.hasAuth(item)) {\r\n                if (!item.children) {\r\n                    //if the item is current item\r\n                    if (item.key===path || path.indexOf(item.key)===0) {\r\n                        this.props.setHeadTitle(item.title)\r\n                    }\r\n                    return (\r\n                        <Menu.Item\r\n                            style={{height: 46, fontSize: 20}}\r\n                            key={item.key}\r\n                            icon={item.icon}\r\n                        >\r\n                            <Link to={item.key} onClick={() => this.props.setHeadTitle(item.title)}>\r\n                                {item.title}\r\n                            </Link>\r\n                        </Menu.Item>\r\n                    )\r\n                } \r\n                else {\r\n                    //submenu need to be open if any chird match beginning of the path\r\n                    if(item.children.find(c => path.indexOf(c.key)===0))\r\n                        this.openkey = item.key\r\n\r\n                    return (\r\n                        <SubMenu\r\n                            style={{fontSize: 20}} \r\n                            key={item.key}\r\n                            icon={item.icon}\r\n                            title={item.title}\r\n                        >\r\n                            {this.getMenuNodes(item.children)}\r\n                        </SubMenu>\r\n                    )\r\n                }\r\n            } else {\r\n                return null\r\n            }\r\n        })\r\n    }\r\n\r\n    hasAuth = (item) => {\r\n        const {key,isPublic} = item\r\n        // use localstorage\r\n        // const username = memoryUtils.user.username\r\n        // const menus = memoryUtils.user.role.menus\r\n        const username = cookieUtils.getUser().username\r\n        const menus = cookieUtils.getUser().role.menus\r\n\r\n        if (username==='admin' || isPublic || menus.includes(key)) {\r\n            return true\r\n        } else if (item.children) {\r\n            return !!item.children.find(child => menus.includes(child.key))\r\n        }\r\n        return false\r\n    }\r\n\r\n    //run getMenuNodes once before render to get openkey\r\n    constructor (props) {\r\n        super(props)\r\n        this.menuNodes = this.getMenuNodes(menuList)\r\n    }\r\n\r\n    render() {\r\n\r\n        let path = this.props.location.pathname\r\n        if (path.indexOf('/product')===0) {\r\n            path = '/product'\r\n        }\r\n        const openkey = this.openkey\r\n\r\n        return (\r\n            <div  className=\"left-nav\">\r\n                <Link to=\"/\" className=\"left-nav-header\">\r\n                    <img src={logo} alt=\"logo\" />\r\n                    <h1>Administration System</h1>\r\n                </Link>\r\n                <Menu \r\n                    selectedKeys={[path]}\r\n                    defaultOpenKeys={[openkey]}\r\n                    mode=\"inline\"\r\n                    theme=\"dark\"\r\n                >\r\n                    { this.menuNodes }\r\n                </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({}),\r\n    {setHeadTitle}\r\n) (withRouter(LeftNav))","export function formatTime(time) {\r\n    if (!time) return ''\r\n    let date = new Date(time)\r\n    const hour=date.getHours()\r\n    const minute=date.getMinutes()\r\n    const second=date.getSeconds()  \r\n    return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n        + ' ' + (hour/10>=1?hour:'0'+hour) + ':' + (minute/10>=1?minute:'0'+minute) \r\n        + ':' + (second/10>=1?second:'0'+second)\r\n}","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Modal, Button } from 'antd'\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons'\r\nimport { formatTime } from '../../utils/timeUtils'\r\n// use localstorage\r\n// import storageUtils from '../../utils/storageUtils'\r\n// import memoryUtils from '../../utils/memoryUtils'\r\n// import menuList from '../../config/menuConfig'\r\nimport cookieUtils from '../../utils/cookieUtils'\r\n// use redux\r\n//import { logout } from '../../redux/actions'\r\nimport { reqWeather } from '../../api'\r\nimport './index.less'\r\n\r\nclass Header extends Component {\r\n    state = {\r\n        currentTime: formatTime(Date.now()),\r\n        icon: '',\r\n        text: '',\r\n    }\r\n\r\n    getTime = () => {\r\n        this.intervalId = setInterval(() => {\r\n            const currentTime = formatTime(Date.now())\r\n            this.setState({currentTime})\r\n        }, 1000)\r\n    }\r\n\r\n    getWeather = async () => {\r\n        const result = await reqWeather('Toronto')\r\n        const { name, region, country } = result.location\r\n        const { temp_c, humidity } = result.current\r\n        const { icon, text } = result.current.condition\r\n        this.setState({ name, region, country, icon, text, temp_c, humidity})\r\n    }\r\n    \r\n    // use localstorage\r\n    // getTitle = () => {\r\n    //     const path = this.props.location.pathname\r\n    //     let title = null\r\n    //     menuList.forEach( item => {\r\n    //         if (item.key===path) {\r\n    //             title=item.title\r\n    //         } else if (item.children) {\r\n    //             const cItem=item.children.find(c => path.indexOf(c.key)===0)\r\n    //             if (cItem) {\r\n    //                 title=cItem.title\r\n    //             }\r\n    //         }\r\n    //     })\r\n    //     return title\r\n    // }\r\n\r\n    logout = () => {\r\n        const { confirm } = Modal\r\n        confirm({\r\n            title: 'Do you want to sign out?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            onOk: () => {\r\n                // use localstorage\r\n                // //remove user data\r\n                // storageUtils.removeUser()\r\n                // memoryUtils.user = {}\r\n                // //redirect to login\r\n\r\n\r\n                // use redux\r\n                //this.props.logout()\r\n                cookieUtils.removeUser()\r\n                this.props.history.replace('/login')\r\n            }\r\n          })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getTime()\r\n        this.getWeather()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //always remember to clear interval\r\n        clearInterval(this.intervalId)\r\n    }\r\n\r\n    render() {\r\n\r\n        const { currentTime, name, region, country, temp_c, humidity, icon, text} = this.state\r\n        //use localstorage\r\n        //const username = memoryUtils.user.username\r\n        const username = cookieUtils.getUser().username\r\n\r\n        //without redux const title=this.getTitle()\r\n        const title=this.props.headTitle\r\n\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"header-top\">\r\n                    <span>Hello, {username}</span>\r\n                    <Button type=\"primary\" shape=\"round\" onClick={this.logout}>Log out</Button>\r\n                </div>\r\n                <div className=\"header-bottom\">\r\n                    <div className=\"header-bottom-left\">{title}</div>\r\n                    <div className=\"header-bottom-right\">\r\n                        <span>{currentTime}-{name},{region},{country}</span>\r\n                        <img src={icon} alt=\"weather\"/>\r\n                        <span>{text},TEMP:{temp_c}°C,RH:{humidity}%</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({headTitle: state}),\r\n    {}\r\n) (withRouter(Header))","import React, { PureComponent } from 'react'\r\nimport { Chart, Line, Axis, Point, Tooltip } from 'bizcharts'\r\n\r\nexport default class PlatformChart extends PureComponent {\r\n\r\n    render() {\r\n\r\n        const data = [\r\n            {\r\n                month: \"Jan\",\r\n                platform: \"PC\",\r\n                visit: 7\r\n            },\r\n            {\r\n                month: \"Jan\",\r\n                platform: \"Andriod\",\r\n                visit: 6\r\n            },\r\n            {\r\n                month: \"Jan\",\r\n                platform: \"iOS\",\r\n                visit: 4\r\n            },\r\n            {\r\n                month: \"Feb\",\r\n                platform: \"PC\",\r\n                visit: 7\r\n            },\r\n            {\r\n                month: \"Feb\",\r\n                platform: \"Andriod\",\r\n                visit: 6\r\n            },\r\n            {\r\n                month: \"Feb\",\r\n                platform: \"iOS\",\r\n                visit: 4\r\n            },\r\n            {\r\n                month: \"Mar\",\r\n                platform: \"PC\",\r\n                visit: 10\r\n            },\r\n            {\r\n                month: \"Mar\",\r\n                platform: \"Andriod\",\r\n                visit: 4\r\n            },\r\n            {\r\n                month: \"Mar\",\r\n                platform: \"iOS\",\r\n                visit: 6\r\n            },\r\n            {\r\n                month: \"Apr\",\r\n                platform: \"PC\",\r\n                visit: 15\r\n            },\r\n            {\r\n                month: \"Apr\",\r\n                platform: \"Andriod\",\r\n                visit: 8\r\n            },\r\n            {\r\n                month: \"Apr\",\r\n                platform: \"iOS\",\r\n                visit: 9\r\n            },\r\n            {\r\n                month: \"May\",\r\n                platform: \"PC\",\r\n                visit: 18\r\n            },\r\n            {\r\n                month: \"May\",\r\n                platform: \"Andriod\",\r\n                visit: 11\r\n            },\r\n            {\r\n                month: \"May\",\r\n                platform: \"iOS\",\r\n                visit: 12\r\n            },\r\n            {\r\n                month: \"Jun\",\r\n                platform: \"PC\",\r\n                visit: 22\r\n            },\r\n            {\r\n                month: \"Jun\",\r\n                platform: \"Andriod\",\r\n                visit: 9\r\n            },\r\n            {\r\n                month: \"Jun\",\r\n                platform: \"iOS\",\r\n                visit: 15\r\n            },\r\n            {\r\n                month: \"Jul\",\r\n                platform: \"PC\",\r\n                visit: 25\r\n            },\r\n            {\r\n                month: \"Jul\",\r\n                platform: \"Andriod\",\r\n                visit: 12\r\n            },\r\n            {\r\n                month: \"Jul\",\r\n                platform: \"iOS\",\r\n                visit: 17\r\n            },\r\n            {\r\n                month: \"Aug\",\r\n                platform: \"PC\",\r\n                visit: 27\r\n            },\r\n            {\r\n                month: \"Aug\",\r\n                platform: \"Andriod\",\r\n                visit: 14\r\n            },\r\n            {\r\n                month: \"Aug\",\r\n                platform: \"iOS\",\r\n                visit: 17\r\n            },\r\n            {\r\n                month: \"Sep\",\r\n                platform: \"PC\",\r\n                visit: 23\r\n            },\r\n            {\r\n                month: \"Sep\",\r\n                platform: \"Andriod\",\r\n                visit: 8\r\n            },\r\n            {\r\n                month: \"Sep\",\r\n                platform: \"iOS\",\r\n                visit: 14\r\n            },\r\n            {\r\n                month: \"Oct\",\r\n                platform: \"PC\",\r\n                visit: 18\r\n            },\r\n            {\r\n                month: \"Oct\",\r\n                platform: \"Andriod\",\r\n                visit: 8\r\n            },\r\n            {\r\n                month: \"Oct\",\r\n                platform: \"iOS\",\r\n                visit: 10\r\n            },\r\n            {\r\n                month: \"Nov\",\r\n                platform: \"PC\",\r\n                visit: 14\r\n            },\r\n            {\r\n                month: \"Nov\",\r\n                platform: \"Andriod\",\r\n                visit: 7\r\n            },\r\n            {\r\n                month: \"Nov\",\r\n                platform: \"iOS\",\r\n                visit: 7\r\n            },\r\n            {\r\n                month: \"Dec\",\r\n                platform: \"PC\",\r\n                visit: 10\r\n            },\r\n            {\r\n                month: \"Dec\",\r\n                platform: \"Andriod\",\r\n                visit: 6\r\n            },\r\n            {\r\n                month: \"Dec\",\r\n                platform: \"iOS\",\r\n                visit: 5\r\n            }\r\n        ]\r\n\r\n        const scale = {\r\n            visit: { \r\n                min: 0,\r\n                alias:'Users'\r\n            },\r\n\r\n        }\r\n\r\n        const title = {\r\n            style: {\r\n                fontSize: 18,\r\n                textAlign: 'center',\r\n                fill: '#999',\r\n            },\r\n \r\n            offset: 40,\r\n          }\r\n\r\n        return (\r\n            <div style={{width: '80%', height: 250, float: 'right'}}>\r\n                <Chart\r\n                    height={230}\r\n                    autoFit\r\n                    data={data}\r\n                    scale={scale}\r\n                    interactions={['element-active']}\r\n                    padding={[20, 20, 60, 80]}\r\n                >\r\n                    <Point position=\"month*visit\" color=\"platform\" shape='circle' />\r\n                    <Axis name=\"visit\" title={title}/>\r\n                    <Line shape=\"smooth\" position=\"month*visit\" color=\"platform\" label=\"visit\" />\r\n                    <Tooltip shared showCrosshairs />\r\n\t            </Chart>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { PureComponent } from 'react'\r\nimport { Chart, Interval, Tooltip } from 'bizcharts'\r\n\r\nexport default class ViewChart extends PureComponent {\r\n\r\n    render() {\r\n\r\n        const data = [\r\n            {\r\n            year: \"1月\",\r\n            views: 108\r\n            },\r\n            {\r\n            year: \"2月\",\r\n            views: 162\r\n            },\r\n            {\r\n            year: \"3月\",\r\n            views: 116\r\n            },\r\n            {\r\n            year: \"4月\",\r\n            views: 245\r\n            },\r\n            {\r\n            year: \"5月\",\r\n            views: 128\r\n            },\r\n            {\r\n            year: \"6月\",\r\n            views: 98\r\n            },\r\n            {\r\n            year: \"7月\",\r\n            views: 88\r\n            },\r\n            {\r\n            year: \"8月\",\r\n            views: 118\r\n            },\r\n            {\r\n            year: \"9月\",\r\n            views: 108\r\n            },\r\n            {\r\n            year: \"10月\",\r\n            views: 108\r\n            },\r\n            {\r\n            year: \"11月\",\r\n            views: 58\r\n            },\r\n            {\r\n            year: \"12月\",\r\n            views: 68\r\n            }\r\n        ]\r\n\r\n        return (\r\n                <Chart\r\n                    height={320}\r\n                    autoFit\r\n                    data={data}\r\n                    interactions={['active-region']}\r\n                    padding={[30, 30, 30, 50]}\r\n                >\r\n                    <Interval position=\"year*views\" />\r\n                    <Tooltip shared />\r\n                </Chart>\r\n        )\r\n    }\r\n}","import React, { PureComponent } from 'react'\r\nimport { Chart, Interval, Tooltip } from 'bizcharts'\r\n\r\nexport default class EngagementChart extends PureComponent {\r\n\r\n    render() {\r\n\r\n        const data = [\r\n            {\r\n            year: \"1月\",\r\n            engagements: 38\r\n            },\r\n            {\r\n            year: \"2月\",\r\n            engagements: 52\r\n            },\r\n            {\r\n            year: \"3月\",\r\n            engagements: 61\r\n            },\r\n            {\r\n            year: \"4月\",\r\n            engagements: 145\r\n            },\r\n            {\r\n            year: \"5月\",\r\n            engagements: 48\r\n            },\r\n            {\r\n            year: \"6月\",\r\n            engagements: 38\r\n            },\r\n            {\r\n            year: \"7月\",\r\n            engagements: 28\r\n            },\r\n            {\r\n            year: \"8月\",\r\n            engagements: 38\r\n            },\r\n            {\r\n            year: \"9月\",\r\n            engagements: 68\r\n            },\r\n            {\r\n            year: \"10月\",\r\n            engagements: 38\r\n            },\r\n            {\r\n            year: \"11月\",\r\n            engagements: 58\r\n            },\r\n            {\r\n            year: \"12月\",\r\n            engagements: 38\r\n            }\r\n        ]\r\n\r\n        return (\r\n                <Chart\r\n                    height={320}\r\n                    autoFit\r\n                    data={data}\r\n                    interactions={['active-region']}\r\n                    padding={[30, 30, 30, 50]}\r\n                >\r\n                    <Interval position=\"year*engagements\" />\r\n                    <Tooltip shared />\r\n                </Chart>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n//use redux\r\n//import { connect } from 'react-redux'\r\nimport cookieUtils from '../../utils/cookieUtils'\r\nimport { Card, Statistic, DatePicker, Timeline, message } from 'antd'\r\nimport { ArrowUpOutlined, ArrowDownOutlined, QuestionCircleOutlined, ReloadOutlined } from '@ant-design/icons'\r\nimport moment from 'moment'\r\nimport PlatformChart from './platform-chart'\r\nimport ViewChart from './view-chart'\r\nimport EngagementChart from './engagement-chart'\r\nimport { reqWork } from '../../api'\r\nimport './index.less'\r\n\r\nconst dateFormat = 'YYYY/MM/DD'\r\nconst {RangePicker} = DatePicker\r\n\r\nexport default class Home extends Component {\r\n\r\n    state = {\r\n        work: {},\r\n        isVisited: true\r\n    }\r\n\r\n    update = () => {\r\n        //use redux\r\n        //const userId = this.props.user._id\r\n        \r\n        const userId = cookieUtils.getUser()._id\r\n        this.initTask(userId)\r\n    }\r\n\r\n    initTask = async (userId) => {\r\n        const result = await reqWork(userId)\r\n        if (result.status===0) {            \r\n            const work = result.data\r\n            this.taskNodes = this.getTaskNodes(work)\r\n            this.setState({work})\r\n        } else {\r\n            message.error('Get tasks failed!')\r\n        }\r\n    }\r\n\r\n    getTaskNodes = (work) => {\r\n        if (work) {\r\n            return work.tasks.map((item) =>{\r\n                if (item.status===0) {\r\n                    return (<Timeline.Item key={item.task} color=\"green\">{item.task}</Timeline.Item>)\r\n                } else if (item.status===1) {\r\n                    return (<Timeline.Item key={item.task} color=\"yellow\">{item.task}</Timeline.Item>)\r\n                } else {\r\n                    return (<Timeline.Item key={item.task} color=\"red\">{item.task}</Timeline.Item>)\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleChange = (isVisited) => {\r\n        return () => this.setState({isVisited})\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.update()\r\n    }\r\n\r\n    render() {\r\n        const {isVisited} = this.state\r\n\r\n        return (\r\n            <div className='home'>\r\n                <Card className=\"home-top\">\r\n                    <Card\r\n                        className=\"home-card\"\r\n                        title=\"Total Views\"\r\n                        style={{width: '15%'}}\r\n                        headStyle={{color: 'rgba(0,0,0,.45)'}}\r\n                    >\r\n                        <div className=\"help-tip\">\r\n                            <QuestionCircleOutlined />\r\n                            <p>This is the total page views since the website is launched.</p>\r\n                        </div>\r\n                        <Statistic\r\n                            value={2163}\r\n                            style={{fontWeight: 'bolder'}}\r\n                        />\r\n                        <Statistic\r\n                            value={15}\r\n                            valueStyle={{fontSize: 15}}\r\n                            prefix={'Weekly'}\r\n                            suffix={<div>%<ArrowUpOutlined style={{color: 'red', marginLeft: 10}}/></div>}\r\n                        />\r\n                        <Statistic\r\n                            value={10}\r\n                            valueStyle={{fontSize: 15}}\r\n                            prefix={'Daily'}\r\n                            suffix={<div>%<ArrowDownOutlined style={{color: '#3f8600', marginLeft: 10}}/></div>}\r\n                        />\r\n                    </Card>\r\n                    <PlatformChart className=\"home-chart\"/>\r\n                </Card>\r\n                <Card\r\n                    className=\"home-bottom\"\r\n                    title={<div className=\"home-menu\">\r\n                        <span className={isVisited ? \"home-menu-active home-menu-visited\" : 'home-menu-visited'}\r\n                            onClick={this.handleChange(true)}>View</span>\r\n                        <span className={isVisited ? \"\" : 'home-menu-active'} onClick={this.handleChange(false)}>Engagement</span>\r\n                    </div>}\r\n                    extra={<RangePicker\r\n                        defaultValue={[moment('2021/06/01', dateFormat), moment('2021/07/01', dateFormat)]}\r\n                        format={dateFormat}\r\n                    />}\r\n                >\r\n                    <Card\r\n                        className=\"home-table-left\"\r\n                        title={isVisited ? 'View Trend' : 'Engagement Trend'}\r\n                        bodyStyle={{padding: 0, height: 381}}\r\n                    >\r\n                        {isVisited ? <ViewChart />: <EngagementChart />}\r\n                    </Card>\r\n\r\n                    <Card\r\n                        title='Tasks'\r\n                        extra={<ReloadOutlined onClick={() => this.update()}/>}\r\n                        className=\"home-table-right\"\r\n                    >\r\n                        <Timeline>\r\n                            {this.taskNodes}\r\n                        </Timeline>\r\n                    </Card>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n// use redux\r\n// export default connect(\r\n//     state => ({user: state.user}),\r\n//     {}\r\n// ) (Home)","import React, { PureComponent } from 'react'\r\nimport { Form, Select, Input } from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst {Item} = Form\r\nconst {Option} = Select\r\n\r\nexport default class AddForm extends PureComponent {\r\n\r\n    static propTypes = {\r\n        setFormRef: PropTypes.func.isRequired,\r\n        categories: PropTypes.array.isRequired,\r\n        parentId: PropTypes.string.isRequired\r\n    }\r\n\r\n    constructor (props) {\r\n        super(props)\r\n        this.formRef = React.createRef()\r\n        this.props.setFormRef(this.formRef)\r\n    }\r\n\r\n    render() {\r\n\r\n        const { categories, parentId } = this.props\r\n\r\n        return (\r\n            <Form initialValues={{classification: parentId}} ref={this.formRef}>\r\n                <Item name='classification'>\r\n                    <Select>\r\n                        <Option key='0' value='0'>Primary Classification</Option>\r\n                        {\r\n                            categories.map(c => (<Option key={c._id} value={c._id}>{c.name}</Option>))\r\n                        }\r\n                    </Select>\r\n                </Item>\r\n                <Item \r\n                    name='category'\r\n                    rules={[\r\n                        {required: true, message: 'category is required'}\r\n                    ]}\r\n                >\r\n                    <Input placeholder='Please input category name'></Input>\r\n                </Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n","import React, { PureComponent } from 'react'\r\nimport { Form, Input } from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst {Item} = Form\r\n\r\nexport default class UpdateForm extends PureComponent {\r\n\r\n    static propTypes = {\r\n        setFormRef: PropTypes.func.isRequired,\r\n        categoryName: PropTypes.string\r\n    }\r\n\r\n    constructor (props) {\r\n        super(props)\r\n        this.formRef = React.createRef()\r\n        this.props.setFormRef(this.formRef)\r\n    }\r\n\r\n    render() {\r\n\r\n        const {categoryName} = this.props\r\n\r\n        return (\r\n            <Form initialValues={{category: categoryName}} ref={this.formRef}>\r\n                <Item \r\n                    name='category'\r\n                    rules={[\r\n                        {required: true, message: 'category is required' }\r\n                    ]}\r\n                >\r\n                    <Input placeholder='Please input category name'></Input>\r\n                </Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Table, Button, Modal, message } from 'antd'\r\nimport { PlusOutlined, ArrowRightOutlined } from '@ant-design/icons'\r\nimport { reqAddCategory, reqCategories, reqUpdateCategory } from '../../api'\r\nimport AddForm from './add-form'\r\nimport UpdateForm from './update-form'\r\nimport { PAGE_SIZE } from '../../utils/constants'\r\n\r\nexport default class Category extends Component {\r\n\r\n    state = {\r\n        loading: false,\r\n        categories: [],\r\n        subCategories: [],\r\n        parentId: '0',\r\n        parentName: '',\r\n        showStatus: 0\r\n    }\r\n\r\n    initColumns = () => {\r\n        this.columns = [\r\n            {\r\n                title: 'Class Name',\r\n                dataIndex: 'name',\r\n            },\r\n            {\r\n                title: 'Action',\r\n                width: 300,\r\n                render: (category) => (\r\n                    <span>\r\n                        <Button type=\"link\" onClick={() => this.showUpdate(category)}>Modify</Button>\r\n                        {this.state.parentId==='0' ? <Button type=\"link\" onClick={()=> this.showSubCategories(category)}>View</Button>: null}\r\n                    </span>\r\n                )\r\n            }\r\n        ]\r\n\r\n    }\r\n\r\n    getCategories = async (parentId) => {\r\n        //before request loading true \r\n        this.setState({loading:true})\r\n\r\n        parentId = parentId || this.state.parentId\r\n\r\n        const result = await reqCategories(parentId)\r\n        //after request loading false\r\n        this.setState({loading:false})\r\n\r\n        if (result.status===0) {            \r\n            const categories = result.data\r\n            if (parentId==='0') {\r\n                this.setState({categories})\r\n            } else {\r\n                this.setState({subCategories:categories})\r\n            }\r\n        } else {\r\n            message.error('Get categrories failed!')\r\n        }\r\n    }\r\n\r\n    showSubCategories = (category) => {\r\n        this.setState({\r\n            parentId:category._id,\r\n            parentName: category.name\r\n        }, () => {            \r\n            this.getCategories()\r\n        })\r\n    }\r\n\r\n    showCategories = () => {\r\n        this.setState({\r\n            subCategories: [],\r\n            parentId: '0',\r\n            parentName: '',\r\n        })\r\n    }\r\n\r\n    handleCancel = () => {\r\n        //close modal\r\n        this.setState({\r\n            showStatus: 0\r\n        })\r\n    }\r\n\r\n    showAdd = () => {\r\n        this.setState({\r\n            showStatus: 1\r\n        })\r\n    }\r\n\r\n    addCategory = () => {\r\n        //validate form promise\r\n        this.formRef.current.validateFields().then(async values => {\r\n            this.setState({\r\n                showStatus: 0\r\n            })\r\n\r\n            const parentId = values.classification\r\n            const categoryName = values.category\r\n\r\n            const result = await reqAddCategory(categoryName, parentId)\r\n            if (result.status===0) {\r\n                //refresh the data\r\n                if(parentId===this.state.parentId) {\r\n                    this.getCategories()\r\n                } else if (parentId==='0') {\r\n                    this.getCategories('0')\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    showUpdate = (category) => {\r\n        \r\n        this.category = category\r\n\r\n        this.setState({\r\n            showStatus: 2\r\n        })\r\n    }\r\n\r\n    updateCategory = () => {\r\n        //validate form promise\r\n        this.formRef.current.validateFields().then(async values => {\r\n            this.setState({\r\n                showStatus: 0\r\n            })\r\n            const categoryId = this.category._id\r\n            const categoryName = values.category\r\n            const result = await reqUpdateCategory(categoryId, categoryName)\r\n            if (result.status===0) {\r\n                //refresh the data\r\n                this.getCategories()\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    constructor (props) {\r\n        super(props)\r\n        this.initColumns()\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.getCategories()\r\n    }\r\n\r\n    render() {\r\n\r\n        const {categories, subCategories, parentId, parentName, showStatus, loading } = this.state\r\n\r\n        const category = this.category || {}\r\n\r\n        const title = parentId==='0' ? <span style={{fontSize:20, fontWeight:'bold'}}>Primary Classification</span> : (\r\n            <span>\r\n                <Button type=\"link\" onClick={this.showCategories} style={{fontSize:20, fontWeight:'bold', marginLeft: -15}}>Primary classification</Button>\r\n                <ArrowRightOutlined style={{marginRight:10}}/>\r\n                <span style={{fontSize:20, fontWeight:'bold'}}>{parentName}</span>\r\n            </span>\r\n        )\r\n\r\n        const extra = (\r\n            <Button type='primary' onClick={this.showAdd}>\r\n                <PlusOutlined />Add\r\n            </Button>\r\n        )\r\n\r\n        return (\r\n            <Card title={title} extra={extra}>\r\n                <Table\r\n                    bordered\r\n                    rowKey='_id'\r\n                    loading={loading}\r\n                    dataSource={parentId==='0' ? categories: subCategories}\r\n                    columns={this.columns}\r\n                    pagination={{defaultPageSize: PAGE_SIZE, showQuickJumper: true}}\r\n                />\r\n\r\n                <Modal title=\"Add classification\" visible={showStatus===1} onOk={this.addCategory} onCancel={this.handleCancel} getContainer={false}>\r\n                    <AddForm\r\n                        categories={categories}\r\n                        parentId={parentId}\r\n                        setFormRef={(formRef) => this.formRef=formRef}\r\n                    />\r\n                </Modal>\r\n\r\n                <Modal title=\"Update classification\" visible={showStatus===2} onOk={this.updateCategory} onCancel={this.handleCancel} getContainer={false}>\r\n                    <UpdateForm\r\n                        categoryName={category.name}\r\n                        setFormRef={(formRef) => this.formRef=formRef}\r\n                    />\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","import React, { PureComponent } from 'react'\r\nimport { Upload, Modal, message } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons'\r\nimport PropTypes from 'prop-types'\r\nimport { reqDeleteImg } from '../../api'\r\nimport { Base_IMG_URL } from '../../utils/constants'\r\n\r\n\r\nfunction getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n}\r\n      \r\nexport default class PicturesWall extends PureComponent {\r\n\r\n    static propTypes = {\r\n        imgs: PropTypes.array\r\n    }\r\n\r\n    constructor (props) {\r\n        super(props)\r\n        let fileList= [\r\n            // each item should be like this\r\n            // {\r\n            //     uid: '-1',\r\n            //     name: 'image.png',\r\n            //     status: 'done',\r\n            //     url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n            // }\r\n        ]\r\n\r\n        const {imgs} = this.props\r\n        if (imgs && imgs.length>0) {\r\n            fileList = imgs.map((img,index) => ({\r\n                uid:-index,\r\n                name: img,\r\n                status: 'done',\r\n                url: Base_IMG_URL+img\r\n            }))\r\n        }\r\n\r\n        this.state = {\r\n            previewVisible: false,\r\n            //image url\r\n            previewImage: '',\r\n            previewTitle: '',\r\n            fileList\r\n        }\r\n\r\n    }\r\n\r\n    state = {    \r\n        previewVisible: false,\r\n        //image url\r\n        previewImage: '',\r\n        previewTitle: '',\r\n        fileList: [\r\n        // each item is like this\r\n        // {\r\n        //     uid: '-1',\r\n        //     name: 'image.png',\r\n        //     status: 'done',\r\n        //     url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png',\r\n        // },\r\n        ],\r\n    }\r\n    \r\n    handleCancel = () => this.setState({ previewVisible: false });\r\n    \r\n    //show big picture of the file\r\n    handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n    \r\n        this.setState({\r\n            previewImage: file.url || file.preview,\r\n            previewVisible: true,\r\n            previewTitle: file.name || file.url.substring(file.url.lastIndexOf('/') + 1),\r\n        })\r\n    }\r\n    \r\n    handleChange = async ({ file, fileList }) => {\r\n        \r\n        if (file.status==='done') {\r\n            const result = file.response\r\n            if (result.status===0) {\r\n                message.success('Picture uploaded successfully!')\r\n                const {name, url} = result.data\r\n                const newFile = fileList[fileList.length-1]\r\n                newFile.name = name\r\n                newFile.url = url\r\n            } else {\r\n                message.error('Failed to upload!')\r\n            }\r\n        } else if (file.status==='removed') {\r\n            const result = await reqDeleteImg(file.name)\r\n            if (result.status===0) {\r\n                message.success('Image deleted successfully!')\r\n            } else {\r\n                message.error('Failed to delete image!')\r\n            }\r\n        }\r\n                \r\n        this.setState({ fileList })\r\n    }\r\n    \r\n    getImgs = () => {\r\n        return this.state.fileList.map(file => file.name)\r\n    }\r\n\r\n    render() {\r\n        const { previewVisible, previewImage, fileList, previewTitle } = this.state;\r\n        const uploadButton = (\r\n        <div>\r\n            <PlusOutlined />\r\n            <div style={{ marginTop: 8 }}>Upload</div>\r\n        </div>\r\n        )\r\n        return (\r\n            <div>\r\n                <Upload\r\n                    //accept location\r\n                    action='/api/imgs'\r\n                    //accept format\r\n                    accept='image/*'\r\n                    //uploaded file name\r\n                    name='image'\r\n                    listType=\"picture-card\"\r\n                    //array of uploaded image object\r\n                    fileList={fileList}\r\n                    onPreview={this.handlePreview}\r\n                    onChange={this.handleChange}\r\n                >\r\n                    {fileList.length >= 4 ? null : uploadButton}\r\n                </Upload>\r\n                <Modal\r\n                    visible={previewVisible}\r\n                    title={previewTitle}\r\n                    footer={null}\r\n                    onCancel={this.handleCancel}\r\n                >\r\n                    <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { PureComponent } from 'react'\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js'\r\nimport { Editor } from 'react-draft-wysiwyg'\r\nimport draftToHtml from 'draftjs-to-html'\r\nimport htmlToDraft from 'html-to-draftjs'\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class RichTextEditor extends PureComponent {\r\n\r\n    static propTypes = {\r\n        detail: PropTypes.string\r\n    }\r\n\r\n    state = {\r\n        editorState: EditorState.createEmpty(),\r\n        textarea:''\r\n    }\r\n\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({\r\n            editorState,\r\n            textarea: draftToHtml(convertToRaw(editorState.getCurrentContent()))\r\n        })\r\n    }\r\n\r\n    getDetail = () => {\r\n        return this.state.textarea\r\n    }\r\n\r\n    uploadImageCallBack = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest()\r\n            xhr.open('POST', '/manage/img/upload')\r\n            const data = new FormData()\r\n            data.append('image', file)\r\n            xhr.send(data)\r\n            xhr.addEventListener('load', () => {\r\n                const response = JSON.parse(xhr.responseText)\r\n                const url = response.data.url\r\n                resolve({data: {link:url}})\r\n            })\r\n            xhr.addEventListener('error', () => {\r\n                const error = JSON.parse(xhr.responseText)\r\n                reject(error)\r\n            })\r\n        })\r\n    }\r\n\r\n    constructor (props) {\r\n        super(props)\r\n        const html = this.props.detail\r\n        if (html) {\r\n            const contentBlock = htmlToDraft(html)\r\n            if (contentBlock) {\r\n                const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks)\r\n                const editorState = EditorState.createWithContent(contentState)\r\n                this.state = {\r\n                    editorState,\r\n                    textarea: html\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { editorState } = this.state\r\n        return (\r\n            <div>\r\n                <Editor\r\n                    editorState={editorState}\r\n                    editorStyle={{border:'1px solid black', height:'200px', padding:'5px'}}\r\n                    onEditorStateChange={this.onEditorStateChange}\r\n                    toolbar={{\r\n                        image: { uploadCallback: this.uploadImageCallBack, alt: { present: true, mandatory: true } },\r\n                    }}\r\n                />\r\n                <textarea\r\n                    disabled\r\n                    value={this.state.textarea}\r\n                    style={{width:'100%', height:'200px', padding:'5px'}}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Card, Form, Input, Cascader, Button, message } from 'antd'\r\nimport { ArrowLeftOutlined } from '@ant-design/icons'\r\nimport PicturesWall from './pictures-wall'\r\nimport RichTextEditor from './rich-text-editor'\r\nimport { reqCategories, reqAddOrUpdateProduct } from '../../api'\r\n\r\n\r\nconst {Item} = Form\r\nconst {TextArea} = Input\r\n\r\nexport default class ProductAddUpdate extends Component {\r\n\r\n    state = {\r\n        options: [],\r\n    }\r\n    \r\n    onFinish = async (values) => {\r\n        const pw = this.pwRef.current\r\n        const rte = this.rteRef.current\r\n\r\n        const imgs = pw.getImgs()\r\n        const detail = rte.getDetail()\r\n        const { productName, productDescription, productPrice, productCategory } =  values\r\n        let pCategoryId, categoryId\r\n        if (productCategory.length===1) {\r\n            pCategoryId = '0'\r\n            categoryId = productCategory[0]\r\n        } else {\r\n            pCategoryId = productCategory[0]\r\n            categoryId = productCategory[1]\r\n        }\r\n        const product = {\r\n            name: productName,\r\n            desc: productDescription,\r\n            price: productPrice,\r\n            imgs,\r\n            detail,\r\n            pCategoryId,\r\n            categoryId\r\n        }\r\n\r\n        if (this.isUpdate) {\r\n            product._id = this.product._id\r\n        }\r\n        const result = await reqAddOrUpdateProduct(product)\r\n        if (result.status===0) {\r\n            message.success(`Product ${this.isUpdate ? 'updated':'added'} successfully!`)\r\n            this.props.history.goBack()\r\n        } else {\r\n            message.error(`Failed to ${this.isUpdate ? 'update':'add'}!`)\r\n        }\r\n    }\r\n\r\n    onFinishFailed = (errorInfo) => {\r\n        message.error('Submit failed!')\r\n    }\r\n\r\n    initOptions = async (categories) => {\r\n        const options = categories.map(c => {\r\n            return {\r\n                value: c._id,\r\n                label: c.name,\r\n                isLeaf: false\r\n            }\r\n        })\r\n\r\n        const { isUpdate, product } = this\r\n        const { pCategoryId } = product\r\n        if (isUpdate && pCategoryId!=='0') {\r\n            const subCategories = await this.getCategories(pCategoryId)\r\n \r\n            const childOptions = subCategories.map(c => (\r\n                {\r\n                    value: c._id,\r\n                    label: c.name,\r\n                    isLeaf: true\r\n                }\r\n            ))\r\n            //find classification the product \r\n            const targetOption = options.find(option => option.value===pCategoryId)\r\n            if (targetOption) {\r\n                targetOption.children = childOptions\r\n            }\r\n        }\r\n\r\n        this.setState({options})\r\n    }\r\n\r\n    getCategories = async (parentId) => {\r\n        const result = await reqCategories(parentId)\r\n        if (result.status===0) {\r\n            const categories = result.data\r\n            if (parentId==='0') {\r\n                this.initOptions(categories)\r\n            } else {\r\n                return categories\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    //lazy load data\r\n    loadData = async (selectedOptions) => {\r\n\r\n        const targetOption = selectedOptions[0]\r\n        targetOption.loading = true\r\n        const subCategories = await this.getCategories(targetOption.value)\r\n        targetOption.loading = false\r\n        if (subCategories && subCategories.length>0) {\r\n            const childOptions = subCategories.map(c => (\r\n                {\r\n                    value: c._id,\r\n                    label: c.name,\r\n                    isLeaf: true\r\n                }\r\n            ))\r\n            targetOption.children = childOptions\r\n        } else {\r\n            targetOption.isLeaf = true\r\n        }\r\n        this.setState({\r\n            options: [...this.state.options]\r\n        })\r\n    }\r\n\r\n    constructor (props) {\r\n        super(props)\r\n        this.pwRef = React.createRef()\r\n        this.rteRef = React.createRef()\r\n        const product = this.props.location.state\r\n        //save add/update\r\n        this.isUpdate = !! product\r\n        //if product is undefined set product {}\r\n        this.product = product || {}\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.getCategories('0')\r\n    }\r\n\r\n    render() {\r\n\r\n        const { isUpdate, product } = this\r\n        const { categoryId, pCategoryId, imgs, detail } = product\r\n        //cascader accept array as initialvalue\r\n        const categoryIds = []\r\n        if(isUpdate) {\r\n            if(pCategoryId==='0') {\r\n                categoryIds.push(categoryId)\r\n            } else {\r\n                categoryIds.push(pCategoryId)\r\n                categoryIds.push(categoryId)\r\n            }\r\n        }\r\n\r\n        const formItemLayout = {\r\n            labelCol: {\r\n              span: 2 \r\n            },\r\n            wrapperCol: {\r\n              span: 8 \r\n            }\r\n        }\r\n\r\n        const tailFormItemLayout = {\r\n            wrapperCol: {\r\n                xs: {\r\n                    span: 24,\r\n                    offset: 0,\r\n                },\r\n                sm: {\r\n                    span: 16,\r\n                    offset: 8,\r\n                }\r\n            }\r\n        }\r\n\r\n        const title = (\r\n            <span style={{fontSize:20, fontWeight:'bold'}}>\r\n                <Button type='link'>\r\n                    <ArrowLeftOutlined style={{fontSize:20}} onClick={() =>this.props.history.goBack()}/>\r\n                </Button>\r\n                {isUpdate ? 'Modify Product' : 'Add Product'}             \r\n            </span>\r\n        )\r\n                \r\n        return (\r\n            <Card title={title}>\r\n                <Form\r\n                    {...formItemLayout}\r\n                    initialValues={{\r\n                        productName: product.name,\r\n                        productDescription: product.desc,\r\n                        productPrice: product.price,\r\n                        productCategory: categoryIds\r\n                    }}\r\n                    onFinish={this.onFinish}\r\n                    onFinishFailed={this.onFinishFailed}\r\n                    scrollToFirstError\r\n                >\r\n                    <Item\r\n                        name ='productName'\r\n                        label='Product Name'\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Product name is required',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input placeholder='Please input product name' />\r\n                    </Item>\r\n                    <Item \r\n                        name ='productDescription'\r\n                        label='Product Description'\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Product description is required',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <TextArea\r\n                            placeholder='Please input product description'\r\n                            autoSize={{ minRows: 2, maxRows: 6 }}\r\n                        />\r\n                    </Item>\r\n                    <Item\r\n                        name='productPrice'\r\n                        label='Product Price'\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Product price is required'\r\n                            },\r\n                            {\r\n                                validator: (_, value) => {\r\n                                    if (value*1 > 0) {\r\n                                        return Promise.resolve()\r\n                                    } else {\r\n                                        return Promise.reject(new Error('Price has to be bigger than 0'))\r\n                                    }\r\n                                }\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Input type='number' placeholder='Please input product price' addonBefore='$'/>\r\n                    </Item>\r\n                    <Item\r\n                        name='productCategory'\r\n                        label='Product Category'\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Product category is required',\r\n                            },\r\n                        ]}\r\n                    >\r\n                        <Cascader\r\n                            options={this.state.options}\r\n                            loadData={this.loadData}\r\n                        />\r\n                    </Item>\r\n                    <Item\r\n                        name='productPicture'\r\n                        label='Product Picture'\r\n                    >\r\n                        <PicturesWall ref={this.pwRef} imgs={imgs}/>\r\n                    </Item>\r\n                    <Item\r\n                        name='productDetail'\r\n                        label='Product Detail'\r\n                        labelCol={{span: 2}}\r\n                        wrapperCol={{span: 18}}\r\n                    >\r\n                        <RichTextEditor ref={this.rteRef} detail={detail}/>\r\n                    </Item>\r\n                    <Item {...tailFormItemLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\r\n                    </Item>\r\n                </Form>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, List, Button} from 'antd'\r\nimport { ArrowLeftOutlined } from '@ant-design/icons'\r\nimport { Base_IMG_URL } from '../../utils/constants'\r\nimport { reqIdentifyCategory } from '../../api'\r\n\r\n\r\nconst {Item} = List\r\n\r\nexport default class ProductDetail extends Component {\r\n    \r\n    state = {\r\n        classification: '',\r\n        category: ''\r\n    }\r\n\r\n    async componentDidMount () {\r\n        const { pCategoryId, categoryId } = this.props.location.state.product\r\n        if (pCategoryId==='0') {\r\n            const result = await reqIdentifyCategory(categoryId)\r\n            if (result.data) {\r\n                this.setState({classification: result.data.name})\r\n            }\r\n        } else {\r\n            //use promise.all to get multiple request at same time\r\n            const results = await Promise.all([reqIdentifyCategory(pCategoryId),reqIdentifyCategory(categoryId)])\r\n            if (results[0].data) {\r\n                this.setState({classification: results[0].data.name})\r\n            }\r\n            if (results[1].data) {\r\n                this.setState({category: results[1].data.name})\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { name, desc, price, detail, imgs, status } = this.props.location.state.product\r\n        const { classification, category } = this.state\r\n        const title = (\r\n            <span style={{fontSize:20, fontWeight:'bold'}}>\r\n                <Button type='link'>\r\n                    <ArrowLeftOutlined style={{fontSize:20}} onClick={() =>this.props.history.goBack()}/>\r\n                </Button>\r\n                Product Detail               \r\n            </span>\r\n        )\r\n\r\n        return (\r\n            <Card title={title} className='product-detail'>\r\n                <List>\r\n                    <Item>\r\n                        <span className='left'>Product Name:</span>\r\n                        <span className='right'>{name}</span>\r\n                    </Item>\r\n                    <Item>\r\n                        <span className='left'>Product Description:</span>\r\n                        <span className='right'>{desc}</span>\r\n                    </Item>\r\n                    <Item>\r\n                        <span className='left'>Product price:</span>\r\n                        <span className='right'>${price}</span>\r\n                    </Item>\r\n                    <Item>\r\n                        <span className='left'>Category:</span>\r\n                        <span className='right'>{classification} {category ? '--> '+category: ''}</span>\r\n                    </Item>\r\n                    <Item>\r\n                        <span className='left'>Product Picture:</span>\r\n                        <span className='right'>\r\n                            {\r\n                                imgs.map(img => (\r\n                                    <img key={img} src={Base_IMG_URL+img} alt=\"Product\"/>\r\n                                ))\r\n                            }\r\n                        </span>\r\n                    </Item>\r\n                    <Item>\r\n                        <span className='left'>Product Detail:</span>\r\n                        <span className='right' dangerouslySetInnerHTML={{__html: detail}}></span>\r\n                    </Item>\r\n                    <Item>\r\n                        <span className='left'>Product Status:</span>\r\n                        <span className='right'>{status===1 ? 'Available': 'Unavailable'}</span>\r\n                    </Item>\r\n                </List>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Select, Input, Table, Button, message } from 'antd'\r\nimport { PlusOutlined } from '@ant-design/icons'\r\nimport { reqProducts, reqSearchProducts, reqUpdateStatus } from '../../api'\r\nimport { PAGE_SIZE } from '../../utils/constants'\r\n\r\nconst {Option} = Select\r\n\r\nexport default class ProductHome extends Component {\r\n\r\n    state = {\r\n        loading: false,\r\n        products: [],\r\n        total: 0,\r\n        keywords: '',\r\n        searchType: 'productName',\r\n        Status: 0\r\n    }\r\n\r\n    initColumns = () => {\r\n        this.columns = [\r\n            {\r\n                title: 'Product Name',\r\n                width: 300,\r\n                dataIndex: 'name',\r\n            },\r\n            {\r\n                title: 'Product Description',\r\n                dataIndex: 'desc',\r\n            },\r\n            {\r\n                title: 'Price',\r\n                width: 120,\r\n                dataIndex: 'price',\r\n                render: (price) => ('$'+price)\r\n            },\r\n            {\r\n                title: 'Status',\r\n                width: 150,\r\n                render: (product) => {\r\n                    const {status, _id} = product\r\n                    const newStatus = (status===1 ? 2:1)\r\n                    return (\r\n                        <span>\r\n                            <Button type=\"primary\" onClick={() => this.updateStatus(_id, newStatus)}>{status===1 ? 'Withdraw':'Launch'}</Button>\r\n                            <span>{status===1 ? 'Available':'Unavailable'}</span>\r\n                        </span> \r\n                    )\r\n                }\r\n            },\r\n            {\r\n                title: 'Action',\r\n                width: 150,\r\n                render: (product) => (\r\n                    <span>\r\n                        <Button type=\"link\" onClick={() => this.props.history.push('/product/addupdate', product)}>Modify</Button>\r\n                        <Button type=\"link\" onClick={() => this.props.history.push('/product/detail', {product})}>View</Button>\r\n                    </span>\r\n                )\r\n            }\r\n        ];\r\n    }\r\n\r\n    getProducts = async (pageNum) => {\r\n        //save pageNum for other method\r\n        this.pageNum = pageNum\r\n        this.setState({loading:true})\r\n        const {searchType, keywords} = this.state\r\n        let result\r\n        if (keywords) {\r\n            result = await reqSearchProducts(pageNum, PAGE_SIZE, searchType, keywords)\r\n        } else {\r\n            result = await reqProducts(pageNum, PAGE_SIZE)\r\n        }\r\n        //after request loading false\r\n        this.setState({loading:false})\r\n\r\n        if (result.status===0) {\r\n            //get product data by page            \r\n            const { list, total } = result.data\r\n            this.setState({total, products: list})\r\n        }\r\n    }\r\n\r\n    updateStatus = async (productId, status) => {\r\n        const result = await reqUpdateStatus(productId, status)\r\n        if (result.status===0) {\r\n            message.success('Product status updated successfully!')\r\n            this.getProducts(this.pageNum)\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.getProducts(1)\r\n    }\r\n\r\n    constructor (props) {\r\n        super(props)\r\n        this.initColumns()\r\n    }\r\n\r\n    render() {\r\n\r\n        const { products, total, loading, searchType, keywords } = this.state\r\n\r\n        const title = (\r\n            <span>\r\n                <Select\r\n                    value={searchType}\r\n                    style={{width:150}}\r\n                    onChange={value => this.setState({searchType: value})}\r\n                >\r\n                    <Option value='productName'>Search by name</Option>\r\n                    <Option value='productDesc'>Search by description</Option>\r\n                </Select>\r\n                <Input\r\n                    placeholder='keywords'\r\n                    style={{width:150, margin: '0 5px'}}\r\n                    value={keywords}\r\n                    onChange={event => this.setState({keywords: event.target.value})}\r\n                />\r\n                <Button type='primary' onClick={()=>this.getProducts(1)}>Search</Button>\r\n            </span>\r\n        ) \r\n\r\n        const extra = (\r\n            <Button type='primary' onClick={() => this.props.history.push('/product/addupdate')}>\r\n                <PlusOutlined />Add\r\n            </Button>\r\n        )\r\n\r\n        return (\r\n            <Card title={title} extra={extra} >\r\n                <Table\r\n                    bordered\r\n                    rowKey='_id'\r\n                    loading={loading}\r\n                    dataSource={products}\r\n                    columns={this.columns}\r\n                    pagination={{\r\n                        current: this.pageNum,\r\n                        total,\r\n                        defaultPageSize: PAGE_SIZE,\r\n                        showQuickJumper: true,\r\n                        onChange: this.getProducts\r\n                    }}\r\n                />\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport ProductAddUpdate from './add-update'\r\nimport ProductDetail from './detail'\r\nimport ProductHome from './home'\r\nimport './index.less'\r\n\r\nexport default class Product extends Component {\r\n    render() {\r\n        return (\r\n            <Switch>\r\n                <Route exact path='/product' component={ProductHome}/>\r\n                <Route path='/product/addupdate' component={ProductAddUpdate}/>\r\n                <Route path='/product/detail' component={ProductDetail}/>\r\n                <Redirect to='/product'/>\r\n            </Switch>\r\n        )\r\n    }\r\n}\r\n","import React, { PureComponent } from 'react'\r\nimport { Form, Input } from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst {Item} = Form\r\n\r\nexport default class AddForm extends PureComponent {\r\n\r\n    static propTypes = {\r\n        setFormRef: PropTypes.func.isRequired,\r\n    }\r\n\r\n    constructor (props) {\r\n        super(props)\r\n        this.formRef = React.createRef()\r\n        this.props.setFormRef(this.formRef)\r\n    }\r\n\r\n    render() {\r\n\r\n        const formItemLayout = {\r\n            labelCol: {\r\n              span: 6 \r\n            },\r\n            wrapperCol: {\r\n              span: 16 \r\n            }\r\n        }\r\n\r\n        return (\r\n            <Form ref={this.formRef} {...formItemLayout}>\r\n                <Item \r\n                    name='roleName'\r\n                    label='Role Name'\r\n                    rules={[\r\n                        {required: true, message: 'role name is required'}\r\n                    ]}\r\n                >\r\n                    <Input placeholder='Please input role name'></Input>\r\n                </Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n","import React, { PureComponent } from 'react'\r\nimport { Form, Input, Tree } from 'antd'\r\nimport PropTypes from 'prop-types'\r\nimport menuList from '../../config/menuConfig'\r\n\r\nconst {Item} = Form\r\n\r\nexport default class UpdateForm extends PureComponent {\r\n\r\n    static propTypes = {\r\n        setFormRef: PropTypes.func.isRequired,\r\n        role: PropTypes.object.isRequired\r\n    }\r\n\r\n    state = {\r\n        checkedKeys: [],\r\n        roleName: ''\r\n    }\r\n    \r\n    onCheck = (checkedKeys, info) => {\r\n        this.setState({checkedKeys})\r\n    }\r\n\r\n    getMenus = () => this.state.checkedKeys\r\n\r\n    constructor (props) {\r\n        super (props)\r\n        const {role} = this.props\r\n        this.state = {\r\n            checkedKeys:role.menus,\r\n            roleName:role.name\r\n        }\r\n        this.formRef = React.createRef()\r\n        this.props.setFormRef(this.formRef)\r\n    }\r\n    \r\n    render() {\r\n\r\n        const formItemLayout = {\r\n            labelCol: {\r\n              span: 6 \r\n            },\r\n            wrapperCol: {\r\n              span: 16 \r\n            }\r\n        }\r\n\r\n        const treeData = [\r\n            {\r\n              title: 'Platform permission',\r\n              key: 'all',\r\n              children: menuList\r\n            }\r\n        ]\r\n\r\n        return (\r\n            <div>\r\n                <Form ref={this.formRef} initialValues={{roleName:this.state.roleName}} {...formItemLayout}>\r\n                    <Item \r\n                        name='roleName'\r\n                        label='Role Name'\r\n                        rules={[\r\n                            {required: true, message: 'role name is required'}\r\n                        ]}\r\n                    >\r\n                        <Input placeholder='Please input role name'></Input>\r\n                    </Item>\r\n                </Form>\r\n                <Tree\r\n                    checkable\r\n                    defaultExpandAll\r\n                    checkedKeys={this.state.checkedKeys} \r\n                    onCheck={this.onCheck}\r\n                    treeData={treeData}\r\n                />  \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n//use redux\r\n//import { connect } from 'react-redux'\r\n//import { logout } from '../../redux/actions'\r\nimport cookieUtils from '../../utils/cookieUtils'\r\nimport { Card, Button, Table, Modal, message } from 'antd'\r\nimport { PAGE_SIZE } from '../../utils/constants'\r\nimport { reqRoles, reqAddRole, reqUpdateRole } from '../../api'\r\n//use localstorage\r\n//import memoryUtils from '../../utils/memoryUtils'\r\n//import storageUtils from '../../utils/storageUtils'\r\n\r\nimport {formatTime} from '../../utils/timeUtils'\r\nimport AddForm from './add-form'\r\nimport UpdateForm from './update-form'\r\n\r\nexport default class Role extends Component {\r\n    \r\n    state = {\r\n        roles: [],\r\n        role: {},\r\n        showStatus: 0\r\n    }\r\n\r\n    initColumns = () => {\r\n        this.columns = [\r\n            {\r\n                title: 'Role Name',\r\n                dataIndex: 'name',\r\n            },\r\n            {\r\n                title: 'Creation Time',\r\n                dataIndex: 'create_time',\r\n                render: formatTime\r\n            },\r\n            {\r\n                title: 'Authorization Time',\r\n                dataIndex: 'auth_time',\r\n                render: formatTime\r\n            },\r\n            {\r\n                title: 'Authorized By',\r\n                dataIndex: 'auth_name',\r\n            }\r\n        ]\r\n    }\r\n\r\n    getRoles = async () => {\r\n        const result = await reqRoles()\r\n        if (result.status===0) {\r\n            const roles = result.data\r\n            this.setState({roles})\r\n        }\r\n    }\r\n\r\n    onRow = (role) => {\r\n        return {\r\n            onClick: (event) => {\r\n                this.setState({role})\r\n            }\r\n        }\r\n    }\r\n\r\n    handleCancel = () => {\r\n        //close modal\r\n        this.setState({\r\n            showStatus: 0\r\n        })\r\n    }\r\n\r\n    addRole = () => {\r\n        //validate form promise\r\n        this.formRef.current.validateFields().then(async values => {\r\n            this.setState({\r\n                showStatus: 0\r\n            })\r\n\r\n            const { roleName } = values\r\n\r\n            const result = await reqAddRole(roleName)\r\n            if (result.status===0) {\r\n                message.success('Role added successfully!')\r\n                const role = result.data\r\n                this.setState((state) => ({\r\n                    roles: [...state.roles, role]\r\n                }))\r\n                \r\n            } else {\r\n                message.error('Failed to add role!')\r\n            }\r\n        })\r\n    }\r\n\r\n    updateRole = () => {\r\n        //validate form promise\r\n        this.formRef.current.validateFields().then( async values => {\r\n            this.setState({\r\n                showStatus: 0\r\n            })\r\n          \r\n            const uf = this.ufRef.current  \r\n            const role=this.state.role\r\n            role.name=values.roleName\r\n            role.menus=uf.getMenus()\r\n            //use localstorage\r\n            // role.auth_name=memoryUtils.user.username\r\n\r\n            //use redux\r\n            //const user = this.props.user\r\n            const user = cookieUtils.getUser()\r\n            role.auth_name = user.username\r\n            role.auth_time = Date.now()\r\n            const result = await reqUpdateRole(role)\r\n            if (result.status===0) {\r\n                if (role._id===user.role_id) {\r\n                    //use localstorage\r\n                    // memoryUtils.user={}\r\n                    // storageUtils.removeUser()\r\n                    // this.props.history.replace('/login')\r\n\r\n                    //use redux\r\n                    //this.props.logout()\r\n\r\n                    cookieUtils.removeUser()\r\n                    message.success('Permission modified, please log in again!')\r\n                } else {\r\n                    message.success('Role updated successfully!')\r\n                    this.setState({\r\n                        roles: [...this.state.roles]\r\n                    })\r\n                }\r\n            } else {\r\n                message.error('Failed to update role!')\r\n            } \r\n        })\r\n    }\r\n\r\n    showAdd = () => {\r\n        this.setState({\r\n            showStatus: 1\r\n        })\r\n    }\r\n\r\n    showUpdate = () => {\r\n        this.setState({\r\n            showStatus: 2\r\n        })\r\n    }\r\n\r\n    constructor (props) {\r\n        super(props)\r\n        this.initColumns()\r\n        this.ufRef = React.createRef()\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.getRoles()\r\n    }\r\n\r\n    render() {\r\n\r\n        const { roles, role, showStatus } = this.state\r\n\r\n        const title = (\r\n            <span>\r\n                <Button type='primary' onClick={this.showAdd} >Add Role</Button>&nbsp;&nbsp;\r\n                <Button type='primary' disabled={!role._id | role.name==='admin'} onClick={this.showUpdate}>Permission Setting</Button>\r\n            </span>\r\n        )\r\n\r\n        return (\r\n            <Card title={title}>\r\n                <Table\r\n                    bordered\r\n                    onRow={this.onRow}\r\n                    rowSelection={{\r\n                        type: 'radio',\r\n                        selectedRowKeys: [role._id],\r\n                        onSelect: (role) => {\r\n                            this.setState({\r\n                                role\r\n                            })\r\n                        }\r\n                    }}\r\n                    rowKey='_id'\r\n                    dataSource={roles}\r\n                    columns={this.columns}\r\n                    pagination={{defaultPageSize: PAGE_SIZE, showQuickJumper: true}}\r\n                />\r\n                <Modal title=\"Add Role\" visible={showStatus===1} onOk={this.addRole} onCancel={this.handleCancel} getContainer={false}>\r\n                    <AddForm\r\n                        setFormRef={(formRef) => this.formRef=formRef}\r\n                    />\r\n                </Modal>\r\n                <Modal title=\"Permission Setting\" visible={showStatus===2} onOk={this.updateRole} onCancel={this.handleCancel} getContainer={false}>\r\n                    <UpdateForm                    \r\n                        ref={this.ufRef}\r\n                        role = {role}\r\n                        setFormRef={(formRef) => this.formRef=formRef}\r\n                    />\r\n                </Modal>\r\n            </Card>            \r\n        )\r\n    }\r\n}\r\n// use redux\r\n// export default connect(\r\n//     state => ({user: state.user}),\r\n//     {logout}\r\n// ) (Role)","import React, { PureComponent } from 'react'\r\nimport { Form, Select, Input } from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst {Item} = Form\r\nconst {Option} = Select\r\n\r\nexport default class UserForm extends PureComponent {\r\n\r\n    static propTypes = {\r\n        setFormRef: PropTypes.func.isRequired,\r\n        user: PropTypes.object.isRequired,\r\n        roles: PropTypes.array.isRequired,\r\n    }\r\n\r\n    constructor (props) {\r\n        super(props)\r\n        this.formRef = React.createRef()\r\n        this.props.setFormRef(this.formRef)\r\n    }\r\n\r\n    render() {\r\n\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: {\r\n                    span: 24,\r\n                },\r\n                sm: {\r\n                    span: 8,\r\n                },\r\n            },\r\n            wrapperCol: {\r\n                xs: {\r\n                    span: 24,\r\n                },\r\n                sm: {\r\n                    span: 16,\r\n                }\r\n            }\r\n        }\r\n\r\n        const prefixSelector = (\r\n            <Item name=\"prefix\" noStyle>\r\n              <Select\r\n                style={{\r\n                  width: 70,\r\n                }}\r\n              >\r\n                <Option value=\"1\">+1</Option>\r\n              </Select>\r\n            </Item>\r\n        )\r\n        const { user, roles } = this.props\r\n\r\n        return (\r\n            <Form\r\n                initialValues={{username: user.username, phone: user.phone, email: user.email, role_id: user.role_id, prefix:'1'}}\r\n                ref={this.formRef}\r\n                {...formItemLayout}\r\n            >\r\n                <Item\r\n                    name='username'\r\n                    label='Username'\r\n                    rules={[\r\n                        {required: true, message: 'Username is required' },\r\n                        {min: 6, message: 'Username has to be no less than 6 digits' },\r\n                        {max: 12, message: 'Username has to be no more than 12 digits' },\r\n                        {pattern: /^[\\w]+$/, message: 'Username must include only the following character types: uppercase, lowercase, numbers, and _ symbol.' },\r\n                    ]}\r\n                >\r\n                    <Input placeholder='Please input username'/>\r\n                </Item>\r\n                <Item \r\n                    name='password'\r\n                    label='Password'\r\n                    rules={[\r\n                        {required: true, message: 'Password is required' },\r\n                        {pattern: /^(?![\\d]+$)(?![a-zA-Z]+$)(?![^\\da-zA-Z]+$).{8,16}$/, message: 'Password must include 8 to 16 digits and at least two of the following character types: letters, numbers and special characters.' }\r\n                    ]}\r\n                    hasFeedback\r\n                >\r\n                    <Input.Password placeholder='Please input password'/>\r\n                </Item>\r\n                <Item\r\n                    name=\"confirm\"\r\n                    label=\"Confirm Password\"\r\n                    dependencies={['password']}\r\n                    hasFeedback\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please confirm your password!',\r\n                        },\r\n                        ({ getFieldValue }) => ({\r\n                            validator(_, value) {\r\n                            if (!value || getFieldValue('password') === value) {\r\n                                return Promise.resolve();\r\n                            }\r\n                            return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n                            },\r\n                        }),\r\n                    ]}\r\n                >\r\n                    <Input.Password placeholder='Please confirm password'/>\r\n                </Item>\r\n                <Item \r\n                    name='phone'\r\n                    label='Phone Number'\r\n                    rules={[\r\n                        {required: true, message: 'Phone Number is required'},\r\n                        {pattern: /^[0-9]{10}$/, message: 'Please enter your 10 digits phone number' }\r\n                    ]}\r\n                >\r\n                    <Input\r\n                        type='number'\r\n                        placeholder='Please input phone number'\r\n                        addonBefore={prefixSelector}\r\n                        style={{width: '100%'}}\r\n                    />\r\n                </Item>\r\n                <Item \r\n                    name='email'\r\n                    label='Email'\r\n                    rules={[\r\n                        {type: 'email', message: 'The input is not valid E-mail!'},\r\n                        {required: true, message: 'Please input your E-mail!'}\r\n                    ]}\r\n                >\r\n                    <Input placeholder='Please input email address'/>\r\n                </Item>\r\n                <Item \r\n                    name='role_id'\r\n                    label='Role'\r\n                    rules={[\r\n                        {required: true, message: 'Email is required'}\r\n                    ]}\r\n                >\r\n                    <Select placeholder='Please select role'>\r\n                        {roles.map(role => <Option key={role._id} value={role._id}>{role.name}</Option>)}\r\n                    </Select>\r\n                </Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Button, Table, Modal, message } from 'antd'\r\nimport { reqUsers, reqDeleteUser, reqAddOrUpdateUser } from '../../api'\r\nimport { DeleteOutlined } from '@ant-design/icons'\r\nimport { PAGE_SIZE } from '../../utils/constants'\r\nimport {formatTime} from '../../utils/timeUtils'\r\nimport UserForm from './user-form'\r\n\r\nexport default class User extends Component {\r\n\r\n    state = {\r\n        loading: false,\r\n        users: [],\r\n        roles: [],\r\n        user: {},\r\n        showStatus: false\r\n    }\r\n\r\n    initColumns = () => {\r\n        this.columns = [\r\n            {\r\n                title: 'Username',\r\n                dataIndex: 'username',\r\n            },\r\n            {\r\n                title: 'Email',\r\n                dataIndex: 'email',\r\n            },\r\n            {\r\n                title: 'Phone Number',\r\n                dataIndex: 'phone',\r\n            },\r\n            {\r\n                title: 'Creation Time',\r\n                dataIndex: 'create_time',\r\n                render: formatTime\r\n            },\r\n            {\r\n                title: 'Role',\r\n                dataIndex: 'role_id',\r\n                render: (role_id) => this.roleNames[role_id]\r\n            },\r\n            {\r\n                title: 'Action',\r\n                width: 300,\r\n                render: (user) => (\r\n                    <span>\r\n                        <Button type=\"link\" onClick={() => this.showAddOrUpdate(user)}>Modify</Button>\r\n                        <Button type=\"link\" onClick={()=> this.deleteUser(user)}>Delete</Button>\r\n                    </span>\r\n                )\r\n            }\r\n        ]\r\n    }\r\n\r\n    initRoleNames = (roles) => {\r\n        this.roleNames = roles.reduce((pre, role) => {\r\n            pre[role._id] = role.name\r\n            return pre\r\n        },{})\r\n    }\r\n\r\n    handleCancel = () => {\r\n        //close modal\r\n        this.setState({\r\n            showStatus: false\r\n        })\r\n    }\r\n\r\n    addOrUpdateUser = () => {\r\n        //validate form promise\r\n        this.formRef.current.validateFields().then( async values => {\r\n            this.setState({\r\n                showStatus: false\r\n            })\r\n            const user = values\r\n            if (this.state.user._id) {\r\n                user._id = this.state.user._id\r\n            }\r\n            const result = await reqAddOrUpdateUser(user)\r\n            if (result.status===0) {\r\n                message.success(`User ${user._id? 'updated':'added'} successfully!`)\r\n                this.getUsers()\r\n            } else {\r\n                message.error(`Failed to ${user._id? 'update':'add'} user!`)\r\n            } \r\n        })\r\n    }\r\n\r\n    showAddOrUpdate = (user) => {\r\n        this.setState({showStatus: true})\r\n        if (user) {\r\n            this.setState({user})\r\n        }\r\n    }\r\n\r\n    deleteUser = (user) => {\r\n        const { confirm } = Modal\r\n        confirm({\r\n            title: `Do you want to delete ${user.username}?`,\r\n            icon: <DeleteOutlined />,\r\n            onOk: async () => {\r\n                const result = await reqDeleteUser(user._id)\r\n                if (result.status===0) {\r\n                    message.success('User deleted sucessfully!')\r\n                    this.getUsers()\r\n                } else {\r\n                    message.error('Failed to delete user!')\r\n                }\r\n            }\r\n          })\r\n    }\r\n\r\n    getUsers = async () => {\r\n        const result = await reqUsers()\r\n        if (result.status===0) {\r\n            const {roles, users} = result.data\r\n            this.initRoleNames(roles)\r\n            this.setState({roles, users})\r\n        }\r\n    }\r\n\r\n    constructor (props) {\r\n        super(props)\r\n        this.initColumns()\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.getUsers()\r\n    }\r\n\r\n    render() {\r\n\r\n        const { users, user, roles, showStatus, loading } = this.state\r\n\r\n        const title = (\r\n            <Button type='primary' onClick={this.showAddOrUpdate}>Add User</Button>\r\n        )\r\n\r\n        return (\r\n            <Card title={title}>\r\n                <Table\r\n                    bordered\r\n                    rowKey='_id'\r\n                    loading={loading}\r\n                    dataSource={users}\r\n                    columns={this.columns}\r\n                    pagination={{defaultPageSize: PAGE_SIZE, showQuickJumper: true}}\r\n                />\r\n\r\n                <Modal \r\n                    title={(user._id?'Update User':'Add User')}\r\n                    visible={showStatus}\r\n                    onOk={this.addOrUpdateUser}\r\n                    onCancel={this.handleCancel}\r\n                    getContainer={false}\r\n                >\r\n                    <UserForm\r\n                        user={user}\r\n                        roles={roles}                        \r\n                        setFormRef={(formRef) => this.formRef=formRef}\r\n                    />\r\n                </Modal>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Button, } from 'antd'\r\nimport ReactECharts from 'echarts-for-react'\r\n\r\nexport default class Engagement extends Component {\r\n\r\n    state = {\r\n        accounts: ['admin','Jerry123','Tom123','John123','Paul123','David123'],\r\n        page_view: [188,221,231,152,180,213],\r\n        scroll: [90,113,127,75,90,100],\r\n        user_engagement: [69,82,93,45,65,71],\r\n        session_start: [6,8,9,4,5,6],\r\n        first_visit: [2,2,3,4,5,1]\r\n    }\r\n\r\n    update = () => {\r\n        this.setState(state => ({\r\n            accounts: state.accounts,\r\n            page_view: state.page_view,\r\n            scroll: state.scroll,\r\n            user_engagement: state.user_engagement,\r\n            session_start: state.session_start,\r\n            first_visit: state.first_visit\r\n        }))\r\n    }\r\n\r\n    getOption = (page_view, scroll, user_engagement, session_start, first_visit, accounts) => {\r\n        return { \r\n            title: {\r\n                text: 'Bar Chart'\r\n            },\r\n            tooltip: {},\r\n            legend: {\r\n                data:['page_view', 'scroll', 'user_engagement', 'session_start', 'first_visit']\r\n            },\r\n            xAxis: {\r\n                data: accounts\r\n            },\r\n            yAxis: {},\r\n            series: [\r\n                {\r\n                    name: 'page_view',\r\n                    type: 'bar',\r\n                    data: page_view\r\n                },\r\n                {\r\n                    name: 'scroll',\r\n                    type: 'bar',\r\n                    data: scroll\r\n                },                {\r\n                    name: 'user_engagement',\r\n                    type: 'bar',\r\n                    data: user_engagement\r\n                },                {\r\n                    name: 'session_start',\r\n                    type: 'bar',\r\n                    data: session_start\r\n                },                {\r\n                    name: 'first_visit',\r\n                    type: 'bar',\r\n                    data: first_visit\r\n                },\r\n            ]\r\n        }        \r\n    }\r\n\r\n    render() {\r\n        const { page_view, scroll, user_engagement, session_start, first_visit, accounts } = this.state\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Button type='primary' onClick={this.update}>Update</Button>\r\n                </Card>\r\n                <Card title='User events by account'>\r\n                    <ReactECharts option={this.getOption(page_view, scroll, user_engagement, session_start, first_visit, accounts)} style={{height:600}}/>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Card, Button, } from 'antd'\r\nimport ReactECharts from 'echarts-for-react'\r\n\r\nexport default class Acquisition extends Component {\r\n\r\n    state = {\r\n        dateList: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\r\n        direct: [11,12,13,14,15,11,13],\r\n        referral: [6,3,7,4,9,4,8]\r\n    }\r\n\r\n    update = () => {\r\n        this.setState(state => ({\r\n            direct: state.direct,\r\n            referral: state.referral,\r\n            dateList: state.dateList\r\n        }))\r\n    }\r\n\r\n    getOption = (direct, referral, dateList) => {\r\n        return { \r\n           \r\n            visualMap: {\r\n                show: false,\r\n                type: 'continuous',\r\n                seriesIndex: 0,\r\n            },\r\n\r\n            title: {\r\n                text: 'Line Chart'\r\n            },\r\n            tooltip: {\r\n                trigger: 'axis'\r\n            },\r\n            legend: {\r\n                data:['direct', 'referral']\r\n            },\r\n            xAxis: {\r\n                data: dateList\r\n            },\r\n            yAxis: {\r\n            },\r\n            grid: {\r\n            },\r\n            series: [{\r\n                name: 'direct',\r\n                type: 'line',\r\n                data: direct\r\n            },            \r\n            {\r\n                name: 'referral',\r\n                type: 'line',\r\n                data: referral\r\n            }\r\n            ]\r\n        }    \r\n    }\r\n\r\n    render() {\r\n        const { direct, referral, dateList } = this.state\r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Button type='primary' onClick={this.update}>Update</Button>\r\n                </Card>\r\n                <Card title='Weekly User Data'>\r\n                    <ReactECharts option={this.getOption(direct, referral, dateList)} style={{height:600}}/>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Card, Button, } from 'antd'\r\nimport ReactECharts from 'echarts-for-react'\r\n\r\nexport default class Demographics extends Component {\r\n\r\n    state = {\r\n        data: [\r\n            {value: 78, name: 'United Kingdom'},\r\n            {value: 106, name: 'Australia'},\r\n            {value: 132, name: 'France'},\r\n            {value: 145, name: 'Germany'},\r\n            {value: 200, name: 'United States of America'},\r\n            {value: 226, name: 'Canada'},\r\n        ]\r\n    }\r\n\r\n    update = () => {\r\n        this.setState(state => ({\r\n            data: state.data,\r\n        }))\r\n    }\r\n\r\n    getOption = () => {\r\n        return {     \r\n            backgroundColor: '#ddd',\r\n\r\n            title: {\r\n                text: 'Pie Chart',\r\n                top: 20,\r\n                textStyle: {\r\n                    color: '#000'\r\n                }\r\n            },        \r\n            legend: {\r\n                top: 'bottom'\r\n            },\r\n            toolbox: {\r\n                show: true,\r\n                feature: {\r\n                    mark: {show: true},\r\n                    dataView: {show: true, readOnly: true},\r\n                    restore: {show: true},\r\n                    saveAsImage: {show: true}\r\n                }\r\n            },\r\n            series:{\r\n                name: 'Area mode',\r\n                type: 'pie',\r\n                radius: [50, 250],\r\n                center: ['50%', '50%'],\r\n                roseType: 'area',\r\n                itemStyle: {\r\n                    borderRadius: 8\r\n                },\r\n                data: this.state.data\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div>\r\n                <Card>\r\n                    <Button type='primary' onClick={this.update}>Update</Button>\r\n                </Card>\r\n                <Card title='Users By Country'>\r\n                    <ReactECharts option={this.getOption()} style={{height:600}}/>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport {Button, Row, Col} from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { setHeadTitle } from '../../redux/actions'\r\nimport './index.less'\r\n\r\nclass NotFound extends Component {\r\n\r\n    goHome = () => {\r\n        this.props.setHeadTitle('Home')\r\n        this.props.history.replace('/home')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row className='not-found'>\r\n                <Col span={12} className='left'></Col>\r\n                <Col span={12} className='right'>\r\n                    <h1>Error 404</h1>\r\n                    <h2>Sorry, we couldn't find that Web page!</h2>\r\n                    <Button\r\n                        type='primary'\r\n                        onClick={() => this.goHome()}\r\n                        size='large'\r\n                    >\r\n                        Return to Home\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({}),\r\n    {setHeadTitle}\r\n) (NotFound) ","import React, { Component } from 'react'\r\nimport { Route, Switch, Redirect } from 'react-router-dom'\r\nimport cookieUtils from '../../utils/cookieUtils'\r\n// use redux\r\n// import { connect } from 'react-redux'\r\nimport { Layout } from 'antd'\r\n// use localstorage\r\n// import memoryUtils from '../../utils/memoryUtils'\r\nimport LeftNav from '../../components/left-nav'\r\nimport Header from '../../components/header'\r\nimport Home from '../../pages/home'\r\nimport Category from '../../pages/category'\r\nimport Product from '../../pages/product'\r\nimport Role from '../../pages/role'\r\nimport User from '../../pages/user'\r\nimport Engagement from '../../pages/charts/engagement'\r\nimport Acquisition from '../../pages/charts/acquisition'\r\nimport Demographics from '../charts/demographics'\r\nimport NotFound from '../../pages/not-found'\r\n\r\nconst { Footer, Sider, Content } = Layout\r\n\r\nexport default class Admin extends Component {\r\n\r\n    routeList = {\r\n        \"/home\": Home,\r\n        \"/category\": Category,\r\n        \"/product\": Product,\r\n        \"/role\": Role,\r\n        \"/user\": User,\r\n        \"/charts/engagement\": Engagement,\r\n        \"/charts/acquisition\": Acquisition,\r\n        \"/charts/demographics\": Demographics\r\n    }\r\n\r\n    getRouteNodes = (user) => {\r\n        return user.role.menus.map((item) => {\r\n            if (this.routeList[item]) {\r\n                return (<Route key={item} path={item} component={this.routeList[item]}/>)\r\n            } else {\r\n                return null\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        // use localstorage\r\n        //const user = memoryUtils.user\r\n\r\n        // use redux\r\n        // const user = this.props.user\r\n\r\n        const user = cookieUtils.getUser()\r\n        if(!user || !user._id) {\r\n            return <Redirect to='/login'/>\r\n        } else {\r\n            this.routeNodes = this.getRouteNodes(user)\r\n        }\r\n\r\n        return (\r\n            <Layout style={{minHeight:'100%'}}>\r\n                <Sider>\r\n                    <LeftNav />\r\n                </Sider>\r\n                <Layout>\r\n                    <Header/>\r\n                    <Content style={{margin:20, backgroundColor:'#fff'}}>\r\n                        <Switch>\r\n                            <Redirect exact from='/' to=\"/home\"/>\r\n                            {this.routeNodes}\r\n                            <Route component={NotFound}/>\r\n                        </Switch>\r\n                    </Content>\r\n                    <Footer style={{textAlign: 'center', color: '#cccccc'}}>This website is for learning and communication only, not for commercial use.</Footer>\r\n                </Layout>\r\n            </Layout>\r\n        )\r\n    }\r\n}\r\n// use redux\r\n// export default connect(\r\n//     state => ({user: state.user}),\r\n//     {}\r\n// ) (Admin)","import './App.css'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport Login from './pages/login'\r\nimport Register from './pages/register'\r\nimport Admin from './pages/admin'\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename='/'>\r\n      <Switch>\r\n        <Route path='/login' component={Login}></Route>\r\n        <Route path='/register' component={Register}></Route>\r\n        <Route path='/' component={Admin}></Route>\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\n//import storageUtils from './utils/storageUtils'\r\n//import memoryUtils from './utils/memoryUtils'\r\n\r\n//const user = storageUtils.getUser()\r\n//memoryUtils.user = user\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n\r\n"],"sourceRoot":""}